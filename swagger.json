{
  "x-generator": "NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Revolv3 OpenApi Spec",
    "description": "Spec for Revolv3",
    "version": "1.15.0"
  },
  "host": "api.revolv3.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "text/plain",
    "application/json",
    "text/json"
  ],
  "paths": {
    "/api/account-verification/ach/person": {
      "post": {
        "tags": [
          "AccountVerification"
        ],
        "summary": "Validate person account",
        "description": "<div><p></p><p>The purpose of this service is to provide merchants with a streamlined and secure method to verify their customers' ACH (Automated Clearing House) accounts.</p><p></p><p>Upon success, this operation returns a status of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the account number is not approved, a status code of 400 will be returned with error code and message.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>Address</td><td>Address at which the customer should be billed. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td></tr><tr><td>Ach</td><td>Object structure according to the ach payment method type: routingNumber, accountNumber, accountType</td></tr><tr><td>FirstName</td><td>Customer's first name</td></tr><tr><td>LastName</td><td>Customer's last name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>CompanyName</td><td>Company Name</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "AccountVerification_VerifyPersonalAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "Amount": null,
                "FirstName": "Joe",
                "LastName": "Doe",
                "CompanyName": null,
                "Address": {
                  "AddressId": null,
                  "AddressLine1": "26 River Street",
                  "AddressLine2": "",
                  "City": "Cambridge",
                  "State": "MA",
                  "PostalCode": "02125",
                  "PhoneNumber": "123-456-789",
                  "Email": null,
                  "Country": "US"
                },
                "Ach": {
                  "RoutingNumber": "123456789",
                  "AccountNumber": "123456789",
                  "AccountType": "Checking"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AchPaymentAccountVerificationDto"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "IsVerified": true,
                "Message": "Approved",
                "ResponseCode": "000"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/VerifyAchAccountResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatusMessageResponse"
            }
          }
        }
      }
    },
    "/api/account-verification/ach/corporate": {
      "post": {
        "tags": [
          "AccountVerification"
        ],
        "summary": "Validate corporate account",
        "description": "<div><p></p><p>The purpose of this service is to provide merchants with a streamlined and secure method to verify their customers' ACH (Automated Clearing House) accounts.</p><p></p><p>Upon success, this operation returns a status of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the account number is not approved, a status code of 400 will be returned with error code and message.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>Address</td><td>Address at which the customer should be billed. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td></tr><tr><td>Ach</td><td>Object structure according to the ach payment method type: routingNumber, accountNumber, accountType</td></tr><tr><td>CompanyName</td><td>Company Name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>FirstName</td><td>Customer's first name</td><td></td></tr><tr><td>LastName</td><td>Customer's last name</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "AccountVerification_VerifyCorporateAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "Amount": null,
                "FirstName": null,
                "LastName": null,
                "CompanyName": "Company Inc.",
                "Address": {
                  "AddressId": null,
                  "AddressLine1": "26 River Street",
                  "AddressLine2": "",
                  "City": "Cambridge",
                  "State": "MA",
                  "PostalCode": "02125",
                  "PhoneNumber": "123-456-789",
                  "Email": null,
                  "Country": "US"
                },
                "Ach": {
                  "RoutingNumber": "123456789",
                  "AccountNumber": "123456789",
                  "AccountType": "Checking"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AchPaymentAccountVerificationDto"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "IsVerified": true,
                "Message": "Approved",
                "ResponseCode": "000"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/VerifyAchAccountResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StatusMessageResponse"
            }
          }
        }
      }
    },
    "/api/Authentication/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Merchant Access Token",
        "description": "<div><p></p><p>For production access to the API, merchants will need an access token.</p><p></p><p>The access tokens are retrieved by sending the merchant client identifier and the merchant secret which can be generated in the Merchant Settings Profile page.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>ClientId</td><td>Client's unique identifier</td></tr><tr><td>ClientSecret</td><td>Client's unique secret API key</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Authentication_GetToken",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "ClientId": "clientIdentifier",
                "ClientSecret": "clientSecret"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/GetAzureAdTokenRequestDTO"
                }
              ]
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "token_type": "Bearer",
                "expires_in": 3599,
                "ext_expires_in": 3599,
                "access_token": "thisisagianttokenhash1NiIsImtpZCI6IlNzWnNCTmhaY0YzUTlTNHRycFFCVEJ5TlthisisagianttokenhashTQ0MTMiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vZjAyMzQ1MDEtMjdkZC00NTY1LWI1NDUtNDBlZDFmZjNjZDU1L3YyLjAiLCJpYXQiOjE1OTEyODthisisagianttokenhashhwIjoxNTkxMjkzODYzLCJhaW8iOiI0MmRnWURBTDhGTU5iNUgwOGF4thisisagianttokenhashYmExN2VkLTExMGMtNDVmthisisagianttokenhashmF6cGFjciI6IjEiLCJ0aWQiOiJmMDIzNDUwMS0yN2RkLTQ1NjUtYjU0NS00MGVkMWZmM2NkNTUiLCJ1dGkiOiJWOEhIbXVfZ1RVZUZQQ0pKNF91b0FBIiwidmVyIjoiMi4wIn0.rrQVOMQ2M3xhBeA96fOeidrghJep_DEC0-y-WTlsZu37rO18FgTBAp-tNeMasrLZlEcP6O2Ij8OqxY8yqxmIaPoaXpH9f8DN6nkthisisagianttokenhashlCDGp6zUdEb0XDA2-JXbSbs918g9DPBjuTDio1-Cithisisagianttokenhash8C4-H1XZfRN4Z7IMthisisagianttokenhashxp8lqK66NrXI2RtihtBs6gI3GKpfhok-H6_NvUaQQthisisagianttokenhashOHlKrKQ6D2fUIcXg"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/TokenResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "error": "ClientId is a required field.",
                "error_description": "One or more errors are present in the request."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/TokenErrorResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "error": "invalid_client",
                "error_description": "AADSTS7000215: Invalid client secret is provided.\r\nTrace ID: f85a8c1e-TraceId-581098fdac00\r\nCorrelation ID: dc8bb9f6-CorrelationId-d223c30e8f6c\r\nTimestamp: 2020-06-04 17:02:39Z",
                "error_codes": [
                  7000215
                ],
                "timestamp": "2020-06-04 17:02:39Z",
                "trace_id": "f85a8c1e-TraceId-581098fdac00",
                "correlation_id": "dc8bb9f6-CorrelationId-d223c30e8f6c",
                "error_uri": "https://login.microsoftonline.com/error?code=7000215"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/TokenErrorResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Checkout": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Create Checkout Link",
        "description": "<div><p></p><p>Create a URL for a checkout page to accept payments. </p><p></p><p>This URL can be seamlessly integrated into your payment flow, embedded into your payment page, or used to direct customers to a hosted payment page. The link will be deactivated once the customer opens the checkout page.</p><p></p><p>The required arguments for this endpoint are checkout line items. Optionally, you can provide a return URL to redirect the customer to a specific webpage after the payment is completed.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>CheckoutSubscription</td><td>Information for creating a checkout subscription</td></tr><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td></tr><tr><td>SubscriptionBillingPlans</td><td>The subscription's individual billing items</td></tr><tr><td>BillingPlanName</td><td>The subscription's primary payment information</td></tr><tr><td>BillingPlanValue</td><td>Value for which the billing plan should be executed for</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>CustomerId</td><td>Customer's unique identifier</td><td>null</td></tr><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td>null</td></tr><tr><td>MerchantSubscriptionRefId</td><td>Merchant's unique identifier for the subscription</td><td>null</td></tr><tr><td>SubscriptionCancelType</td><td>The circumstances under which a subscription must be cancelled (e.g. Immediate or EndOfCycle)</td><td></td></tr><tr><td>TrialDuration</td><td>The amount of trial duration time in the unit of TrialDurationType</td><td>0</td></tr><tr><td>TrialDurationType</td><td>The type of trial duration</td><td>Daily</td></tr><tr><td>BillingPlanCycleCount</td><td>The number of times the billing plan should be billed before expiration</td><td>-1</td></tr><tr><td>BillingPlanValueType</td><td>A qualifier for how the value should be interpreted (e.g. standard, discount, discountPercentage, finalDiscount, or priceOverride)</td><td>Standard</td></tr><tr><td>BillingPlanStartCycleDelay</td><td>Amount of subscription cycle to delay the start date of the billing plan</td><td>0</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Checkout_CreateCheckoutLink",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "ReturnUrl": "https%3A%2F%2Fsite.com",
                "OneTimePayment": {
                  "CheckoutLineItems": [
                    {
                      "Name": "Item 1",
                      "Description": null,
                      "Value": 9.99,
                      "ValueType": "Standard"
                    },
                    {
                      "Name": "Item 2",
                      "Description": null,
                      "Value": 21.99,
                      "ValueType": "Standard"
                    }
                  ]
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateCheckoutLinkRequestDto"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutLinkResponseDto"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Checkout/{checkoutUid}": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "summary": "Get Complete Checkout Information",
        "description": "<div><p></p><p>Retrieve a complete checkout information (specified with Checkout ID) with a status code of 200 (OK).</p><p>If the checkout ID cannot be associated with a checkout, a status code of 404 will be returned.</p></div>",
        "operationId": "Checkout_GetCompleteCheckoutInformation",
        "parameters": [
          {
            "type": "string",
            "name": "checkoutUid",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CheckoutId": "12345678-ABCD-1234-EFGH-987654321000",
                "CheckoutStatus": "Pending",
                "ReturnUrl": "https://mysite.com/order/12345678",
                "CompletionDate": null,
                "Customer": {
                  "CustomerId": 328,
                  "FirstName": "Joe",
                  "LastName": "Doe",
                  "Email": "aa@aa.com"
                },
                "Invoice": {
                  "InvoiceId": 8786,
                  "InvoiceStatus": "Paid",
                  "Total": 10.0,
                  "BillingDate": "2024-11-15T16:19:48.6745743+01:00",
                  "PaymentMethod": {
                    "PaymentMethodId": 0,
                    "BillingAddress": {
                      "AddressId": 4232,
                      "AddressLine1": "20 Bitterwater Street",
                      "AddressLine2": null,
                      "City": "King City",
                      "State": "CA",
                      "PostalCode": "11111",
                      "PhoneNumber": "43823527092",
                      "Email": "aa@aa.com",
                      "Country": "US"
                    },
                    "BillingFirstName": "Joe",
                    "BillingLastName": "Doe",
                    "Type": null,
                    "AchDetails": null,
                    "CreditCardDetails": {
                      "Last4Digit": "1111",
                      "ExpirationDate": "11/11"
                    }
                  },
                  "InvoiceAttempts": null
                },
                "CheckoutLineItems": [
                  {
                    "Name": "Checkout Line Item Name",
                    "Description": "Checkout Line Item Description",
                    "Value": 10.0,
                    "ValueType": "Standard"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/GetCompleteCheckoutInformationResponseDto"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create Customer",
        "description": "<div><p></p><p>Create a customer for a merchant with a first name, last name, and optional merchant customer reference ID.</p><p>Upon success, a status code of 201 (Created) will be returned. If a customer cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p><p>Additionally, subscriptions can be created simultaneously with the customer. If there are one of more subscription failed during the creation, a status code of 207 (Multi-Status) will be returned. A 207 status code response is an array of success (201) and failure (400) responses. The response field can be either Customer (Create Customer 201 response), Subscription (Create Subscription 201 response) or CreateSubscriptionFailure type. CreateSubscriptionFailure response type has a MerchantSubscriptionRefId field for the failure subscription, and an ErrorMessage field for the error description. For a sample of each response type, refer to the 207 response sample below.</p><p>For additional details on how to create subscriptions, refer to the specifications at Create Subscription.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>FirstName</td><td>Customer's first name</td></tr><tr><td>LastName</td><td>Customer's last name</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td>null</td></tr><tr><td>BillingAddresses</td><td>Customer's associated address(es) for billing purposes. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td><td>[]</td></tr><tr><td>ShippingAddresses</td><td>Customer's associated address(es) for shipping purposes</td><td>[]</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Customers_CreateCustomer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantCustomerRefId": null,
                "FirstName": "John",
                "LastName": "Doe",
                "Email": null,
                "BillingAddresses": [
                  {
                    "AddressId": null,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "ShippingAddresses": [
                  {
                    "AddressId": null,
                    "AddressLine1": "101 First Street",
                    "AddressLine2": "",
                    "City": "Costa Mesa",
                    "State": "CA",
                    "PostalCode": "90001",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "Subscriptions": [
                  {
                    "PaymentMethods": [
                      {
                        "Priority": 0,
                        "TaxAmount": null,
                        "OriginalNetworkTransactionId": null,
                        "BillingAddress": {
                          "AddressId": null,
                          "AddressLine1": "100 Main Street",
                          "AddressLine2": "",
                          "City": "Irvine",
                          "State": "CA",
                          "PostalCode": "92602",
                          "PhoneNumber": null,
                          "Email": null,
                          "Country": "US"
                        },
                        "BillingFirstName": "John",
                        "BillingLastName": "Doe",
                        "CreditCard": {
                          "PaymentAccountNumber": "4111111111111111",
                          "ExpirationDate": "1025",
                          "SecurityCode": null
                        },
                        "Ach": null,
                        "GooglePay": null,
                        "MerchantPaymentMethodRefId": null
                      }
                    ],
                    "ExistingPaymentMethod": null,
                    "MerchantSubscriptionRefId": "1234-5678-9101",
                    "BillingFrequencyType": "daily",
                    "SubscriptionStatusType": "current",
                    "SubscriptionCancelType": "EndOfCycle",
                    "StartDate": "2024-11-15T00:00:00",
                    "TrialDuration": 0,
                    "TrialDurationType": "daily",
                    "TaxAddress": {
                      "AddressId": null,
                      "AddressLine1": "101 Update Street",
                      "AddressLine2": "",
                      "City": "Irvine",
                      "State": "CA",
                      "PostalCode": "92602",
                      "PhoneNumber": null,
                      "Email": null,
                      "Country": "US"
                    },
                    "IncludeRawProcessorResponse": false,
                    "Customer": null,
                    "SubscriptionBillingPlans": [
                      {
                        "Name": "Billing Plan 1",
                        "Value": 10.99,
                        "CycleCount": -1,
                        "ValueType": "Standard",
                        "StartCycleDelay": 0
                      },
                      {
                        "Name": "Billing Plan 2",
                        "Value": 14.99,
                        "CycleCount": 12,
                        "ValueType": "Standard",
                        "StartCycleDelay": 1
                      }
                    ],
                    "RecycleImmediatePayment": false
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateCustomerRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "John",
                "LastName": "Doe",
                "BillingAddresses": [
                  {
                    "AddressId": 1,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "ShippingAddresses": [
                  {
                    "AddressId": 2,
                    "AddressLine1": "101 First Street",
                    "AddressLine2": "",
                    "City": "Costa Mesa",
                    "State": "CA",
                    "PostalCode": "90001",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "Subscriptions": [
                  {
                    "SubscriptionId": 1,
                    "CustomerId": 1,
                    "MerchantSubscriptionRefId": "1234-5678-9101",
                    "NetworkTransactionId": null,
                    "BillingFrequencyType": "daily",
                    "SubscriptionStatusType": "current",
                    "SubscriptionCancelType": null,
                    "InitialBillDate": "15-Nov-24",
                    "NextBillDate": "16-Nov-24",
                    "TaxAddress": null,
                    "PaymentMethodIds": null,
                    "CancelledAt": null,
                    "BillingPlans": [
                      {
                        "SubscriptionBillingPlanId": 1,
                        "SubscriptionId": 0,
                        "Name": "Billing Plan 1",
                        "Value": 10.99,
                        "StartDate": "15-Nov-24",
                        "CyclesRemaining": -1,
                        "CycleCount": 0,
                        "ValueType": "Standard"
                      },
                      {
                        "SubscriptionBillingPlanId": 2,
                        "SubscriptionId": 0,
                        "Name": "Billing Plan 2",
                        "Value": 14.99,
                        "StartDate": "16-Nov-24",
                        "CyclesRemaining": 12,
                        "CycleCount": 0,
                        "ValueType": "Standard"
                      }
                    ],
                    "Message": null,
                    "ProcessorRawResponse": null
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "No address found for AddressId 1."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "207": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "Response": {
                    "CustomerId": 1,
                    "MerchantCustomerRefId": "1234-5678-9101",
                    "FirstName": "John",
                    "LastName": "Doe",
                    "BillingAddresses": [
                      {
                        "AddressId": 1,
                        "AddressLine1": "100 Main Street",
                        "AddressLine2": "",
                        "City": "Santa Ana",
                        "State": "CA",
                        "PostalCode": "90000",
                        "PhoneNumber": null,
                        "Email": null,
                        "Country": "US"
                      }
                    ],
                    "ShippingAddresses": [
                      {
                        "AddressId": 2,
                        "AddressLine1": "101 First Street",
                        "AddressLine2": "",
                        "City": "Costa Mesa",
                        "State": "CA",
                        "PostalCode": "90001",
                        "PhoneNumber": null,
                        "Email": null,
                        "Country": "US"
                      }
                    ]
                  },
                  "StatusCode": 201,
                  "Name": "Customer"
                },
                {
                  "Response": {
                    "SubscriptionId": 1,
                    "CustomerId": 1,
                    "MerchantSubscriptionRefId": "1234-5678-9101",
                    "NetworkTransactionId": null,
                    "BillingFrequencyType": "daily",
                    "SubscriptionStatusType": "current",
                    "SubscriptionCancelType": null,
                    "InitialBillDate": "16-Nov-24",
                    "NextBillDate": null,
                    "TaxAddress": null,
                    "PaymentMethodIds": null,
                    "CancelledAt": null,
                    "BillingPlans": [
                      {
                        "SubscriptionBillingPlanId": 1,
                        "SubscriptionId": 0,
                        "Name": "Billing Plan 1",
                        "Value": 10.99,
                        "StartDate": "15-Nov-24",
                        "CyclesRemaining": -1,
                        "CycleCount": 0,
                        "ValueType": "Standard"
                      },
                      {
                        "SubscriptionBillingPlanId": 2,
                        "SubscriptionId": 0,
                        "Name": "Billing Plan 2",
                        "Value": 14.99,
                        "StartDate": "15-Nov-24",
                        "CyclesRemaining": 12,
                        "CycleCount": 0,
                        "ValueType": "Standard"
                      }
                    ],
                    "Message": null,
                    "ProcessorRawResponse": null
                  },
                  "StatusCode": 201,
                  "Name": "Subscription"
                },
                {
                  "Response": {
                    "MerchantSubscriptionRefId": "1234-5678-9101",
                    "ErrorMessage": "Subscription creation fail"
                  },
                  "StatusCode": 400,
                  "Name": "CreateSubscriptionFailure"
                }
              ],
              "items": {
                "$ref": "#/definitions/SimpleObjectResult"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customers",
        "description": "<div><p></p><p>Search for a customer given a Merchant Customer Ref ID, first name, or last name.</p><p>If no customer with the provided Merchant Customer Ref ID, first name, or last name is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Customers_GetCustomers",
        "parameters": [
          {
            "type": "string",
            "name": "merchantCustomerRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "firstName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "lastName",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "CustomerId": 1,
                  "MerchantCustomerRefId": "1234-5678-9101",
                  "FirstName": "John",
                  "LastName": "Doe"
                },
                {
                  "CustomerId": 2,
                  "MerchantCustomerRefId": "5678-1234-9101",
                  "FirstName": "Jane",
                  "LastName": "Doe"
                },
                {
                  "CustomerId": 3,
                  "MerchantCustomerRefId": "9101-5678-1234",
                  "FirstName": "Jeremy",
                  "LastName": "Doe"
                }
              ],
              "items": {
                "$ref": "#/definitions/GetCustomersQueryResultDTO"
              }
            }
          },
          "404": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer",
        "description": "<div><p></p><p>Retrieve information for a single customer by their Customer ID.</p><p>If no customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Customers_GetCustomer",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "John",
                "LastName": "Doe",
                "BillingAddresses": [
                  {
                    "AddressId": 1,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "ShippingAddresses": [
                  {
                    "AddressId": 2,
                    "AddressLine1": "101 First Street",
                    "AddressLine2": "",
                    "City": "Costa Mesa",
                    "State": "CA",
                    "PostalCode": "90001",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "404": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer",
        "description": "<div><p></p><p>Delete a customer by their Customer ID.</p><p></p><p>If no customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Customers_DeleteCustomer",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update Customer",
        "description": "<div><p></p><p>Update a customer by their Customer ID.</p><p></p><p>This action currently accepts any number of the following fields: Merchant Customer Ref ID, first name, and last name.</p><p></p><p>Only fields present in the request will be updated.</p><p></p><p>Upon successful update, a status code of 200 (Success) will be returned.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantCustomerRefId</td><td>Merchant's identifier for the customer</td><td></td></tr><tr><td>FirstName</td><td>Customer's first name</td><td></td></tr><tr><td>LastName</td><td>Customer's last name</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Customers_UpdateCustomer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "Jonathan",
                "LastName": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/UpdateCustomerRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "Jonathan",
                "LastName": "Doe",
                "BillingAddresses": [
                  {
                    "AddressId": 1,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ],
                "ShippingAddresses": [
                  {
                    "AddressId": 2,
                    "AddressLine1": "101 First Street",
                    "AddressLine2": "",
                    "City": "Costa Mesa",
                    "State": "CA",
                    "PostalCode": "90001",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}/subscriptions": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Subscriptions by Customer",
        "description": "<div><p></p><p>Retrieve subscriptions for a customer (specified by Customer ID) with a status code of 200 (OK).</p><p></p><p>If no subscriptions exist for the customer, a status code of 204 (No Content) will be returned.</p><p></p><p>If the Customer ID cannot be associated with an active customer, a status code of 404 will be returned.</p></div>",
        "operationId": "Customers_GetSubscriptions",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "SubscriptionId": 1,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "daily",
                  "SubscriptionStatusType": "current",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": {
                    "AddressId": 0,
                    "AddressLine1": "101 Update Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "PaymentMethodIds": [
                    1
                  ],
                  "CancelledAt": null,
                  "BillingPlans": [
                    {
                      "SubscriptionBillingPlanId": 1,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 1",
                      "Value": 10.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": -1,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    },
                    {
                      "SubscriptionBillingPlanId": 2,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 2",
                      "Value": 14.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": 12,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    }
                  ],
                  "Message": null,
                  "ProcessorRawResponse": null
                },
                {
                  "SubscriptionId": 2,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "monthly",
                  "SubscriptionStatusType": "recycled",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": null,
                  "PaymentMethodIds": null,
                  "CancelledAt": null,
                  "BillingPlans": null,
                  "Message": null,
                  "ProcessorRawResponse": null
                }
              ],
              "items": {
                "$ref": "#/definitions/SubscriptionDTO"
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}/address/{addressId}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer Address",
        "description": "<div><p></p><p>Delete an associated address for a given Customer ID.</p><p></p><p>Upon a successful delete, the operation returns the updated Customer object.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Customers_DeleteCustomerAddress",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "addressId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the address",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "John",
                "LastName": "Doe"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update Address",
        "description": "<div><p></p><p>Update an address for a given Customer ID and Address ID.</p><p></p><p>An address type (e.g. Shipping, Billing, etc.) may be provided to change the address type for a given address.</p><p></p><p>If an invalid address type is supplied, a status of 400 (Bad Request) will be returned.</p><p></p><p>If no existing, active customer or address with the provided Customer ID and Address ID respectively can be found, a status of 404 (Not Found) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressType</td><td>Usage type of the address (e.g. shipping, billing or tax)</td><td></td></tr><tr><td>AddressLine1</td><td>Address Line 1</td><td></td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td></td></tr><tr><td>State</td><td>State</td><td></td></tr><tr><td>PostalCode</td><td>PostalCode</td><td></td></tr><tr><td>Country</td><td>Country</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Customers_UpdateCustomerAddress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "addressId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the address",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "AddressLine1": "101 Update Street",
                "City": "Irvine",
                "PostalCode": "92602"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/UpdateCustomerAddressRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "John",
                "LastName": "Doe",
                "BillingAddresses": [
                  {
                    "AddressId": 1,
                    "AddressLine1": "101 Update Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}/address": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add Customer Address",
        "description": "<div><p></p><p>Append an address for a given Customer ID.</p><p></p><p>An address type (e.g. Shipping, Billing, etc.) must be provided.</p><p></p><p>Upon success, the operation will return the updated Customer object.</p><p></p><p>If a duplicate address/address type combination is supplied, a status of 400 (Bad Request) will be returned.</p><p></p><p>If no existing customer with the provided Customer ID is found, a status of 404 (Not Found) will be returned.</p><p></p><p>An address type (e.g. Shipping, Billing, Tax) must be provided. A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>AddressType</td><td>Usage type of the address (e.g. shipping, billing or tax)</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressLine1</td><td>Address Line 1</td><td>null</td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td>null</td></tr><tr><td>State</td><td>State</td><td>null</td></tr><tr><td>PostalCode</td><td>PostalCode</td><td>null</td></tr><tr><td>Country</td><td>Country</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Customers_AddCustomerAddress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "AddressLine1": "100 Main Street",
                "AddressLine2": "",
                "City": "Santa Ana",
                "State": "CA",
                "PostalCode": "90000",
                "Country": "USA",
                "AddressType": "Billing"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateCustomerAddressRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "MerchantCustomerRefId": "1234-5678-9101",
                "FirstName": "John",
                "LastName": "Doe",
                "BillingAddresses": [
                  {
                    "AddressId": 0,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CustomerDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}/invoices": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Search Invoices for Customer",
        "description": "<div><p></p><p>Retrieve invoices for a customer given their Customer ID.</p><p></p><p>Additionally, the following optional query string parameters can be applied to narrow the search results: merchantCustomerRefId, merchantInvoiceRefId, startDate, and endDate.</p><p></p><p>Given a start/end date, the invoices' billing date field will be compared to the provided date filter.</p><p></p><p>The Page query parameter represents the page number that could be used to navigate through the dataset. It starts from page 1, and subsequent pages are numbered accordingly. Default value is 1.</p><p>The PageSize query parameter determines the number of records to be displayed on a single page. It could be used to specify how many entries you want to retrieve per page. Default value is 100. Max value is ___.</p><p></p><p>Date filter query parameters should be entered in the form of 'YYYY-MM-dd' Upon finding matching results, the operation will return a status of 200 (OK).</p><p></p><p>If an invalid value is provided for the start or end date query parameter, a status code of 400 (Bad Request) will be returned instead.</p></div>",
        "operationId": "Customers_GetInvoices",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "merchantCustomerRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "merchantInvoiceRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "startDate",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "endDate",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "InvoiceId": 1,
                  "CustomerId": null,
                  "MerchantInvoiceRefId": "1234-5678-9101",
                  "BinNumber": "411111",
                  "Last4Digit": "1111",
                  "InvoiceStatus": "Pending",
                  "Subtotal": 60.99,
                  "Tax": 5.4,
                  "Total": 66.39,
                  "BillingDate": "15-Oct-24",
                  "MerchantLegalName": null,
                  "MerchantCustomerRefId": null,
                  "CustomerFirstName": null,
                  "CustomerLastName": null
                },
                {
                  "InvoiceId": 2,
                  "CustomerId": null,
                  "MerchantInvoiceRefId": "1234-5678-9101",
                  "BinNumber": "411111",
                  "Last4Digit": "1111",
                  "InvoiceStatus": "Pending",
                  "Subtotal": 40.99,
                  "Tax": 3.6,
                  "Total": 43.59,
                  "BillingDate": "15-Nov-24",
                  "MerchantLegalName": null,
                  "MerchantCustomerRefId": null,
                  "CustomerFirstName": null,
                  "CustomerLastName": null
                }
              ],
              "items": {
                "$ref": "#/definitions/InvoiceDTO"
              }
            }
          },
          "204": {
            "description": ""
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Customers/{customerId}/installments": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create Installment",
        "description": "<div><p></p><p>Create an installment for a customer (specified by Customer ID) with a Billing Frequency Type (Daily, Weekly, Biweekly, Monthly, Bimonthly, Quarterly, Semiannually, Yearly), Installment type (Interval, Amount), Installment value and Installment items. Payment method information (with billing address, billing first name, billing last name, payment method type (credit card, ach, google pay)) or an authorized payment method identifier or payment method identifier must be provided.</p><p></p><p>Optionally, a MerchantInstallmentRefId, TaxAddress, StartDate, TrailDuration and TrailDurationType (the same values as in Billing Frequency Type), DownPayment may be included.</p><p></p><p>Upon successful creation of the installment, a status code of 201 (Created) will be returned.</p><p></p><p>If the Customer ID provided does not exist, a status code of 404 (NotFound) will be returned.</p><p></p><p>If an installment cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td></tr><tr><td>InstallmentItems</td><td>The installment's individual billing items</td></tr><tr><td>InstallmentType</td><td>How the installment period will be divided by amount or number of intervals</td></tr><tr><td>InstallmentValue</td><td>The number of cycles if installment type is Interval or payment amount per settlement cycle if installment type is Amount</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInstallmentRefId</td><td>Merchant's unique identifier for the installment</td><td>null</td></tr><tr><td>StartDate</td><td>Subscription's start date</td><td>Today</td></tr><tr><td>TrialDuration</td><td>The amount of trial duration time in the unit of TrialDurationType</td><td>0</td></tr><tr><td>TrialDurationType</td><td>The type of trial duration</td><td>Daily</td></tr><tr><td>TaxAddress</td><td>Address to be used for taxation purposes. Possible sets of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td><td>null</td></tr><tr><td>DownPayment</td><td>The payment a customer pays upfront</td><td>0</td></tr><tr><td>PaymentMethodAuthorizationId</td><td>Unique identifier for a previously pre-authorized payment method</td><td>null</td></tr><tr><td>PaymentMethod</td><td>The payment method information</td><td>null</td></tr><tr><td>PaymentMethodId</td><td>Unique identifier for the customer's payment information</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Customers_CreateInstallment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantInstallmentRefId": "1234-5678-9101",
                "BillingFrequencyType": "daily",
                "StartDate": "2024-11-15T00:00:00",
                "TrialDuration": 0,
                "TrialDurationType": "daily",
                "TaxAddress": {
                  "AddressId": null,
                  "AddressLine1": "101 Update Street",
                  "AddressLine2": "",
                  "City": "Irvine",
                  "State": "CA",
                  "PostalCode": "92602",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "InstallmentItems": [
                  {
                    "Name": "Billing Plan 1",
                    "Value": 1000.00,
                    "ValueType": "Standard"
                  },
                  {
                    "Name": "Billing Plan 2",
                    "Value": 1200.00,
                    "ValueType": "Standard"
                  }
                ],
                "DownPayment": 200.00,
                "InstallmentType": "Amount",
                "InstallmentValue": 500.00,
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4"
                },
                "PaymentMethodAuthorizationId": null,
                "PaymentMethodId": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateInstallmentRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InstallmentId": 1,
                "CustomerId": 1,
                "MerchantInstallmentRefId": "1234-5678-9101",
                "BillingFrequencyType": "Monthly",
                "InstallmentType": "Amount",
                "InstallmentValue": 100.5,
                "DownPayment": 800.99,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "15-Dec-24",
                "TaxAddress": {
                  "AddressId": 1,
                  "AddressLine1": "112 Main Street",
                  "AddressLine2": null,
                  "City": "Irvine",
                  "State": "CA",
                  "PostalCode": "92602",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "PaymentMethodIds": [
                  1
                ],
                "InstallmentItems": [
                  {
                    "InstallmentItemId": 1,
                    "InstallmentId": 0,
                    "Name": "Installment item 1",
                    "Value": 1001.99,
                    "ValueType": "Standard"
                  }
                ],
                "BillingPlans": [
                  {
                    "InstallmentBillingPlanId": 1,
                    "InstallmentId": 1,
                    "Name": "Installment item 1",
                    "Value": 800.99,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": 0,
                    "CycleCount": 1,
                    "ValueType": "Standart"
                  },
                  {
                    "InstallmentBillingPlanId": 2,
                    "InstallmentId": 1,
                    "Name": "Installment item 1",
                    "Value": 100.5,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": 1,
                    "CycleCount": 1,
                    "ValueType": "Standart"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/InstallmentDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "409": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "PaymentMethodAuthorizationId is being processed in another request."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Installments/{installmentId}": {
      "delete": {
        "tags": [
          "Installments"
        ],
        "summary": "Delete Installment",
        "description": "<div><p></p><p>Delete a installment (specified with Installment ID) with a status code of 200 (OK).</p><p></p><p>If the Installment ID cannot be associated with an active installment, a status code of 404 will be returned.</p></div>",
        "operationId": "Installments_DeleteInstallment",
        "parameters": [
          {
            "type": "integer",
            "name": "installmentId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a installment with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Installments/{installmentId}/payment": {
      "post": {
        "tags": [
          "Installments"
        ],
        "summary": "Make adhoc payment",
        "description": "<div><p></p><p>Create an adhoc payment for a given installment ID.</p><p></p><p>The given installment must have an active payment method associate or an error status 404 (NotFound) will be returned.</p><p></p><p>The invoice ID will be returned as well, allowing users to view the invoice generated.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>AdhocAmount</td><td>Dollar amount to be paid.</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInvoiceRefId</td><td>Merchant's unique identifier for the invoice to be created</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Installments_MakeAdhocPayment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "installmentId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantInvoiceRefId": "6683df8b-1e88-4ef0-adb1-5222fabd3dfd",
                "AdhocAmount": 200.00
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AdhocPaymentRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "e094b8d6-6351-473e-8f55-4661fb56d4ac",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": null,
                "Subtotal": 200.99,
                "TaxAmount": 18.1,
                "Total": 219.09
              },
              "allOf": [
                {
                  "$ref": "#/definitions/InstallmentInitialPaymentResponseDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a installment with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoices",
        "description": "<div><p></p><p>Search for invoices matching the following possible optional criteria: Merchant Customer Ref ID, Merchant Invoice Ref ID, start date, and end date.</p><p></p><p>Given a start/end date, the invoices' billing date field will be compared to the provided date filter.</p><p></p><p>The Page query parameter represents the page number that could be used to navigate through the dataset. It starts from page 1, and subsequent pages are numbered accordingly. Default value is 1.</p><p>The PageSize query parameter determines the number of records to be displayed on a single page. It could be used to specify how many entries you want to retrieve per page. Default value is 100. Max value is ___.</p><p></p><p>Date filter query parameters should be entered in the form of 'YYYY-MM-dd' Upon finding matching results, the operation will return a status of 200 (OK).</p><p></p><p>If an invalid value is provided for the start or end date query parameter, a status code of 400 (Bad Request) will be returned instead.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Invoices_GetInvoices",
        "parameters": [
          {
            "type": "string",
            "name": "merchantCustomerRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "merchantInvoiceRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "startDate",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "endDate",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "page",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "InvoiceId": 1,
                  "CustomerId": null,
                  "MerchantInvoiceRefId": "1234-5678-9101",
                  "BinNumber": "411111",
                  "Last4Digit": "1111",
                  "InvoiceStatus": "Pending",
                  "Subtotal": 60.99,
                  "Tax": 5.4,
                  "Total": 66.39,
                  "BillingDate": "15-Oct-24",
                  "MerchantLegalName": null,
                  "MerchantCustomerRefId": null,
                  "CustomerFirstName": null,
                  "CustomerLastName": null
                },
                {
                  "InvoiceId": 2,
                  "CustomerId": null,
                  "MerchantInvoiceRefId": "1234-5678-9101",
                  "BinNumber": "411111",
                  "Last4Digit": "1111",
                  "InvoiceStatus": "Pending",
                  "Subtotal": 40.99,
                  "Tax": 3.6,
                  "Total": 43.59,
                  "BillingDate": "15-Nov-24",
                  "MerchantLegalName": null,
                  "MerchantCustomerRefId": null,
                  "CustomerFirstName": null,
                  "CustomerLastName": null
                }
              ],
              "items": {
                "$ref": "#/definitions/VwInvoice"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices/{invoiceId}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get Invoice",
        "description": "<div><p></p><p>Retrieve an invoice given an Invoice ID.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK). If no matching invoice can be associated with the given Invoice ID, a status code of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Invoices_GetInvoice",
        "parameters": [
          {
            "type": "integer",
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the invoice",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includeRawProcessorResponse",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "ParentInvoiceId": null,
                "CustomerId": null,
                "MerchantInvoiceRefId": "1234-5678-9101",
                "PaymentMethod": {
                  "PaymentMethodId": 0,
                  "BillingAddressId": 0,
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "MerchantPaymentMethodRefId": null,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": null
                },
                "InvoiceStatus": "Pending",
                "Subtotal": 73.1,
                "Tax": 6.48,
                "Total": 79.58,
                "BillingDate": "15-Nov-24",
                "MerchantLegalName": null,
                "MerchantCustomerRefId": null,
                "CustomerFirstName": null,
                "CustomerLastName": null,
                "SubscriptionId": 123456,
                "InstallmentId": null,
                "EligibilityFailReason": null,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "InvoiceLineItems": [
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 1,
                    "Name": "LineItem1",
                    "Description": "Line Item 1 Description",
                    "Value": 15.3,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 2,
                    "Name": "LineItem2",
                    "Description": "Line Item 2 Description",
                    "Value": 25.5,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 3,
                    "Name": "LineItem3",
                    "Description": "Line Item 3 Description",
                    "Value": 32.3,
                    "ValueType": null
                  }
                ],
                "InvoiceAttempts": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/InvoiceDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "No invoice found for InvoiceId 1."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update Invoice",
        "description": "<div><p></p><p>Update an invoice status or/and MerchantInvoiceRefId.</p><p></p><p>Only fields present in the request will be updated.</p><p>Valid statuses: Paid, Void, Pending, Recycle, Noncollectable, Failed, Refund, MerchantPaid, MerchantCancelled, OneTimePaymentPending, PartialRefund, BatchPending, CapturePending, RefundPending, RefundDeclined, RefundFailed, RetryPending</p><p></p><p>Upon success the operation will return a status code of 200 (OK).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If an invalid Invoice ID is submitted, a status of 404 (Not Found) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInvoiceRefId</td><td>Merchant's unique identifier for the invoice to be created</td><td></td></tr><tr><td>InvoiceStatus</td><td>The initial status for the invoice to be created</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Invoices_UpdateInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the invoice",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantInvoiceRefId": "UpdatedMerchantInvoiceRefId"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/UpdateInvoiceRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "ParentInvoiceId": null,
                "CustomerId": null,
                "MerchantInvoiceRefId": "UpdatedMerchantInvoiceRefId",
                "PaymentMethod": null,
                "InvoiceStatus": "Pending",
                "Subtotal": 73.1,
                "Tax": 6.48,
                "Total": 79.58,
                "BillingDate": "15-Nov-24",
                "MerchantLegalName": null,
                "MerchantCustomerRefId": null,
                "CustomerFirstName": null,
                "CustomerLastName": null,
                "SubscriptionId": null,
                "InstallmentId": null,
                "EligibilityFailReason": null,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "InvoiceLineItems": [
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 1,
                    "Name": "LineItem1",
                    "Description": "Line Item 1 Description",
                    "Value": 15.3,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 2,
                    "Name": "LineItem2",
                    "Description": "Line Item 2 Description",
                    "Value": 25.5,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 3,
                    "Name": "LineItem3",
                    "Description": "Line Item 3 Description",
                    "Value": 32.3,
                    "ValueType": null
                  }
                ],
                "InvoiceAttempts": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/InvoiceDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "No invoice found for InvoiceId 1."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "Delete Invoice",
        "description": "<div><p></p><p>Delete an invoice (specified by Invoice ID) and its attached invoice line items.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK).</p><p></p><p>If the Invoice ID cannot be associated with an active invoice, a status of 404 will be returned.</p></div>",
        "operationId": "Invoices_DeleteInvoice",
        "parameters": [
          {
            "type": "integer",
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the invoice",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "No invoice found for InvoiceId 1."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices/{customerId}": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create Invoice",
        "description": "<div><p></p><p>Create an invoice with or without a specific customer attached. To attach a specific customer, pass the customerId to the request url parameter. Otherwise, leave the request url paramter empty.</p><p></p><p>Upon success, the operation will return a status code of 201 (Created).</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>PaymentMethodId</td><td>Unique identifier for the customer's payment information</td></tr><tr><td>InvoiceStatus</td><td>The initial status for the invoice to be created</td></tr><tr><td>BillingDate</td><td>The day on which billing should be attempted for the invoice</td></tr><tr><td>InvoiceLineItems</td><td>A list of one or more items the customer should be billed for</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantInvoiceRefId</td><td>Merchant's unique identifier for the invoice to be created</td><td>null</td></tr><tr><td>TaxAddress</td><td>Address to be used for taxation purposes. Possible sets of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Invoices_CreateInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantInvoiceRefId": "1234-5678-9101",
                "PaymentMethodId": 1,
                "InvoiceStatus": "Paid",
                "BillingDate": "15-Nov-24",
                "ParentInvoiceId": null,
                "TaxAddress": null,
                "InvoiceLineItems": [
                  {
                    "Name": "LineItem1",
                    "Description": "Line Item 1 Description",
                    "Value": 10.00,
                    "ValueType": "Standard"
                  },
                  {
                    "Name": "LineItem2",
                    "Description": "Line Item 2 Description",
                    "Value": 20.00,
                    "ValueType": "Standard"
                  },
                  {
                    "Name": "LineItem3",
                    "Description": "Line Item 3 Description",
                    "Value": 30.00,
                    "ValueType": "Standard"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateInvoiceRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Optional unique identifier of the customer",
            "format": "int64",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "ParentInvoiceId": null,
                "CustomerId": null,
                "MerchantInvoiceRefId": "1234-5678-9101",
                "PaymentMethod": {
                  "PaymentMethodId": 0,
                  "BillingAddressId": 0,
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "MerchantPaymentMethodRefId": null,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": null
                },
                "InvoiceStatus": "Pending",
                "Subtotal": 60.00,
                "Tax": 5.4000,
                "Total": 65.4000,
                "BillingDate": "15-Nov-24",
                "MerchantLegalName": null,
                "MerchantCustomerRefId": null,
                "CustomerFirstName": null,
                "CustomerLastName": null,
                "SubscriptionId": null,
                "InstallmentId": null,
                "EligibilityFailReason": null,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "InvoiceLineItems": [
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 1,
                    "Name": "LineItem1",
                    "Description": "Line Item 1 Description",
                    "Value": 10.00,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 2,
                    "Name": "LineItem2",
                    "Description": "Line Item 2 Description",
                    "Value": 20.00,
                    "ValueType": null
                  },
                  {
                    "InvoiceId": 1,
                    "InvoiceLineItemId": 3,
                    "Name": "LineItem3",
                    "Description": "Line Item 3 Description",
                    "Value": 30.00,
                    "ValueType": null
                  }
                ],
                "InvoiceAttempts": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/InvoiceDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices/{invoiceId}/refund": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Refund Invoice",
        "description": "<div><p></p><p>Refund the total amount of an invoice (specified by Invoice ID) with empty body, or partial refund by providing a body with the amount.</p><p></p><p>Upon successful refund, the refunds array will contain an item with \"responseMessage\": \"Approved\". You can pay attention also to the invoiceStatus field, if the refund was successful, the status of the invoice will be “Refund” or “PartialRefund\".</p><p></p><p>If the refund amount exceeds the remaining amount for the refund, or an invalid field or value is submitted, then a status code of 400 (Bad Request) will be returned.</p><p></p><p>If the Invoice ID cannot be associated with an active invoice, a status of 404 (Not Found) will be returned.</p><p></p><p>If the refund cannot be completed, the operation will return a status of 422 (Unprocessable Entity).</p><p></p><p>Refunds potentially might not be completed because of an invalid payment method e.g. a deleted payment method or the payment processor rejected the refund.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>RefundAmount</td><td>Dollar amount to be refunded. If no amount is provided, value defaults to invoice total</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Invoices_RefundInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the invoice",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "Amount": 5.00
              },
              "allOf": [
                {
                  "$ref": "#/definitions/RefundInvoiceRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RefundInvoiceResponseDTO"
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/RefundInvoiceResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "409": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Refund is being processed in another request."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices/payment": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "One Time Payment Without Subscription",
        "description": "<div><p></p><p>A one-time payment without a subscription allows you to both authorize and capture funds in a single transaction, as well as capture previously authorized amounts. You can also send a partial capture if needed. The required arguments for this endpoint are customer ID or customer information, payment method details or authorized payment method ID or payment method ID (previously created and tokenized payment method), and an invoice with invoice line items.</p></div>",
        "operationId": "Invoices_OneTimePaymentWithoutSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "CustomerId": 1,
                "FirstName": null,
                "LastName": null,
                "MerchantCustomerRefId": null,
                "Email": null,
                "Invoice": {
                  "MerchantInvoiceRefId": "123456789",
                  "InvoiceLineItems": [
                    {
                      "Name": "LineItem1",
                      "Description": "Line Item 1 Description",
                      "Value": 10.00,
                      "ValueType": "Standard"
                    },
                    {
                      "Name": "LineItem2",
                      "Description": "Line Item 2 Description",
                      "Value": 20.00,
                      "ValueType": "Standard"
                    },
                    {
                      "Name": "LineItem3",
                      "Description": "Line Item 3 Description",
                      "Value": 30.00,
                      "ValueType": "Standard"
                    }
                  ]
                },
                "DynamicDescriptor": {
                  "SubMerchantId": "merchantId",
                  "SubMerchantName": "REV*revolv3",
                  "SubMerchantPhone": "00442030513031",
                  "CountryCode": "US",
                  "City": "Irvine"
                },
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main",
                    "AddressLine2": null,
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "91111",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "Joe",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4"
                },
                "PaymentMethodAuthorizationId": null,
                "PaymentMethodId": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/OneTimePaymentWithoutSubscriptionRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "123456789",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": "Approve",
                "Subtotal": 11.97,
                "TaxAmount": 1.2,
                "Total": 13.17,
                "PaymentMethodId": 1
              },
              "allOf": [
                {
                  "$ref": "#/definitions/OneTimePaymentWithoutSubscriptionResponseDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "409": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "PaymentMethodAuthorizationId is being processed in another request."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Invoices/one-off-payment": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "One-off Payment",
        "description": "<div><p></p><p>Create a one-off payment.</p><p></p><p></p><p>The required argument for this endpoint are payment method information and invoice with invoice line items.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>Invoice</td><td>Invoice with invoice line items</td></tr><tr><td>PaymentMethod</td><td>The payment method information for this payment</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>Email</td><td>Client's email</td><td></td></tr><tr><td>PhoneNumber</td><td>Client's phone number</td><td></td></tr><tr><td>IpAddress</td><td>Client's IP address</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Invoices_OneOffPayment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "CustomerId": 1,
                "FirstName": null,
                "LastName": null,
                "MerchantCustomerRefId": null,
                "Email": null,
                "Invoice": {
                  "MerchantInvoiceRefId": "123456789",
                  "InvoiceLineItems": [
                    {
                      "Name": "LineItem1",
                      "Description": "Line Item 1 Description",
                      "Value": 10.00,
                      "ValueType": "Standard"
                    },
                    {
                      "Name": "LineItem2",
                      "Description": "Line Item 2 Description",
                      "Value": 20.00,
                      "ValueType": "Standard"
                    },
                    {
                      "Name": "LineItem3",
                      "Description": "Line Item 3 Description",
                      "Value": 30.00,
                      "ValueType": "Standard"
                    }
                  ]
                },
                "DynamicDescriptor": {
                  "SubMerchantId": "merchantId",
                  "SubMerchantName": "REV*revolv3",
                  "SubMerchantPhone": "00442030513031",
                  "CountryCode": "US",
                  "City": "Irvine"
                },
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main",
                    "AddressLine2": null,
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "91111",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "Joe",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4"
                },
                "PaymentMethodAuthorizationId": null,
                "PaymentMethodId": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/OneOffPaymentRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "123456789",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": "Transaction completed",
                "Subtotal": 11.97,
                "TaxAmount": 1.2,
                "Total": 13.17
              },
              "allOf": [
                {
                  "$ref": "#/definitions/OneOffPaymentResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/PaymentMethod": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Create Payment Method",
        "description": "<div><p></p><p>Create a payment method with a billing address ID, first name, last name, credit card or debit card number and its expiration date (MMYY)</p></div>",
        "operationId": "PaymentMethod_CreatePaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "createPaymentMethodRequestDTO",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "BillingAddress": {
                  "AddressId": null,
                  "AddressLine1": "100 Main Street",
                  "AddressLine2": "",
                  "City": "Santa Ana",
                  "State": "CA",
                  "PostalCode": "90000",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "BillingFirstName": "John",
                "BillingLastName": "Smith",
                "CreditCard": {
                  "PaymentAccountNumber": "4111111111111111",
                  "ExpirationDate": "1025",
                  "SecurityCode": null
                },
                "Ach": null,
                "GooglePay": null,
                "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "PaymentMethodId": 1,
                "BillingAddressId": 1,
                "BillingAddress": {
                  "AddressId": 1,
                  "AddressLine1": "123 Main",
                  "AddressLine2": "",
                  "City": "Santa Ana",
                  "State": "CA",
                  "PostalCode": "90000",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "BillingFirstName": "John",
                "BillingLastName": "Smith",
                "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "PaymentMethodAchDetails": null,
                "PaymentMethodCreditCardDetails": {
                  "BinNumber": "411111",
                  "PaymentLast4Digit": "1111",
                  "PaymentExpirationDate": "1025"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/PaymentMethodDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/PaymentMethod/{paymentMethodId}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Get Payment Method",
        "description": "<div><p></p><p>Retrieve information for a payment method by the ID.</p><p></p><p>If no payment method with the provided PaymentMethod ID is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "PaymentMethod_GetPaymentMethod",
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the payment method",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "PaymentMethodId": 1,
                "BillingAddressId": 1,
                "BillingAddress": {
                  "AddressId": 1,
                  "AddressLine1": "123 Main",
                  "AddressLine2": "",
                  "City": "Santa Ana",
                  "State": "CA",
                  "PostalCode": "90000",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "BillingFirstName": "John",
                "BillingLastName": "Smith",
                "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "PaymentMethodAchDetails": null,
                "PaymentMethodCreditCardDetails": {
                  "BinNumber": "411111",
                  "PaymentLast4Digit": "1111",
                  "PaymentExpirationDate": "1025"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/PaymentMethodDTO"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a payment method with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Update Payment Method Billing Address",
        "description": "<div><p></p><p>Update a payment method billing address by its PaymentMethodId.</p><p></p><p></p><p></p><p>This action can include any combination of fields. </p><p>Only the fields specified in the request will be updated. AddressId and BillingAddress object are mutually exclusive. </p><p></p><p></p><p></p><p>Upon successful update, a status code of 200 (Success) will be returned. If no existing payment method with the provided PaymentMethodId or existing address with the provided AddressId is found a status code of 404 (Not Found) will be returned. If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p></div>",
        "operationId": "PaymentMethod_UpdatePaymentMethodBillingAddress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the payment method",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "BillingAddress": {
                  "AddressId": null,
                  "AddressLine1": "100 Main Street",
                  "AddressLine2": null,
                  "City": "Santa Ana",
                  "State": "CA",
                  "PostalCode": "90000",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "BillingFirstName": "John",
                "BillingLastName": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/UpdateBillingAddressRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "PaymentMethodId": 1,
                "BillingAddressId": 1,
                "BillingAddress": {
                  "AddressId": 1,
                  "AddressLine1": "123 Main",
                  "AddressLine2": "",
                  "City": "Santa Ana",
                  "State": "CA",
                  "PostalCode": "90000",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "BillingFirstName": "John",
                "BillingLastName": "Smith",
                "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                "PaymentMethodAchDetails": null,
                "PaymentMethodCreditCardDetails": {
                  "BinNumber": "411111",
                  "PaymentLast4Digit": "1111",
                  "PaymentExpirationDate": "1025"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/PaymentMethodDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a payment method with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Delete Payment Method",
        "description": "<div><p></p><p>Delete a payment method by its PaymentMethodID.</p><p></p><p>If no payment method with the provided PaymentMethodId is found, a status of 404 (Not Found) will be returned.</p></div>",
        "operationId": "PaymentMethod_DeletePaymentMethod",
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the payment method",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a payment method with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Payment method [x] is used as the payment method for subscription(s)"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/PaymentMethod/authorize": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Authorize Payment Method",
        "description": "<div><p></p><p>Authorize a payment method with a specified amount.</p><p>        If PaymentMethod specified, then new payment method will be created and authorized.</p><p>        If PaymentMethodId specified, then existing payment method will be used for authorization.</p><p></p><p>Upon success the operation will return a status code of 200 (OK).</p><p></p><p>If the request contains invalid or insufficient information, the operation will return a status code of 400 (Bad Request).</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>AuthorizationAmount</td><td>Dollar amount to be authorized</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>PaymentMethod</td><td>Payment card information to be used for authorization</td><td>null</td></tr><tr><td>PaymentMethodId</td><td>Unique identifier for the customer's payment information</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "PaymentMethod_AuthorizePaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Smith",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": null
                },
                "PaymentMethodId": null,
                "Amount": 5.0,
                "ProcessorType": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizePaymentMethodCommandRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "PaymentMethodAuthorizationId": 1,
                "PaymentMethod": {
                  "PaymentMethodId": 1,
                  "BillingAddressId": 1,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "123 Main",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Smith",
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": {
                    "BinNumber": "411111",
                    "PaymentLast4Digit": "1111",
                    "PaymentExpirationDate": "1025"
                  }
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizePaymentMethodCommandResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/PaymentMethod/reverse-auth": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Reverse Authorization",
        "description": "<div><p></p><p>Reverse the authorization of a payment method. </p><p>Upon successful reversal, the operation will return a status code of 200 (OK).</p><p></p><p>If the PaymentAuthorizationId cannot be associated with an active Payment Authorization, status of 404 (Not Found) will be returned. </p><p> </p><p>If the reversal could not be processed, the operation will return a status of 422 (UnprocessableEntity) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>PaymentMethodAuthorizationId</td><td>Unique identifier for a previously pre-authorized payment method</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "PaymentMethod_ReverseAuthorization",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "PaymentMethodAuthorizationId": 1320832609,
                "Reason": "Merchant requested reversal of auth",
                "Amount": 0.682550820337455
              },
              "allOf": [
                {
                  "$ref": "#/definitions/ReverseAuthorizationCommandRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "PaymentMethodAuthorizationId": 1,
                "PaymentMethod": {
                  "PaymentMethodId": 1,
                  "BillingAddressId": 1,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "123 Main",
                    "AddressLine2": "",
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "90000",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Smith",
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4",
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": {
                    "BinNumber": "411111",
                    "PaymentLast4Digit": "1111",
                    "PaymentExpirationDate": "1025"
                  }
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/ReverseAuthorizationCommandResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Payments/sale": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Sale With Payment Method Details",
        "description": "<div><p></p><p>Initiate a payment. The payment can be either one-time or it can include data to define the initial transaction in a recurring or installment stream. This allows the networks to tie subsequent transactions back to the original approval, ensuring a seamless and efficient payment process.</p><p></p><p></p><p>The required argument for this endpoint are payment method information and invoice.</p></div>",
        "operationId": "Payments_Sale",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "NetworkProcessing": {
                  "ProcessingType": 1,
                  "OriginalNetworkTransactionId": null
                },
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main",
                    "AddressLine2": null,
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "91111",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "Joe",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": null
                },
                "CustomerId": 1,
                "IncludeRawProcessorResponse": false,
                "Invoice": {
                  "MerchantInvoiceRefId": "123456789",
                  "Amount": {
                    "Currency": "USD",
                    "Value": 30.99
                  }
                },
                "DynamicDescriptor": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleWithPaymentMethodRawRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "1234-5678-9101",
                "MerchantPaymentMethodRefId": null,
                "NetworkTransactionId": "675930e8-a4d9-4800-9a27-69f96c8ce12f",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": "Approved",
                "Amount": {
                  "Currency": "USD",
                  "Value": 30.99
                },
                "PaymentMethodId": 1,
                "PaymentMethodTypeId": 0,
                "RawResponse": "Processor raw response (without parsing on revolv3 side)"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Payments/sale/{paymentMethodId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Sale With Payment Method Id",
        "description": "<div><p></p><p>Initiate a payment. The payment can be either one-time or it can include data to define the initial transaction in a recurring or installment stream. This allows the networks to tie subsequent transactions back to the original approval, ensuring a seamless and efficient payment process.</p><p></p><p></p><p>The required argument for this endpoint are payment method ID and invoice.</p></div>",
        "operationId": "Payments_SaleWithPaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "CustomerId": 1,
                "IncludeRawProcessorResponse": false,
                "Invoice": {
                  "MerchantInvoiceRefId": "123456789",
                  "Amount": {
                    "Currency": "USD",
                    "Value": 30.99
                  }
                },
                "DynamicDescriptor": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleWithPaymentMethodRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "1234-5678-9101",
                "MerchantPaymentMethodRefId": null,
                "NetworkTransactionId": "7865bbbf-592c-41ac-9f61-ac0cbeeb825a",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": "Approved",
                "Amount": {
                  "Currency": "USD",
                  "Value": 30.99
                },
                "PaymentMethodId": 1,
                "PaymentMethodTypeId": 0,
                "RawResponse": "Processor raw response (without parsing on revolv3 side)"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Payments/capture/{paymentMethodAuthorizationId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Capture",
        "description": "<div><p></p><p>Сapture the previous authorization. A capture can be performed on the amount equal to or less than the amount of the referenced authorization.</p><p></p><p></p><p>The required argument for this endpoint are authorized payment method ID and invoice.</p></div>",
        "operationId": "Payments_Capture",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodAuthorizationId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "CustomerId": 1,
                "IncludeRawProcessorResponse": false,
                "Invoice": {
                  "MerchantInvoiceRefId": "123456789",
                  "Amount": {
                    "Currency": "USD",
                    "Value": 30.99
                  }
                },
                "DynamicDescriptor": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "CustomerId": 1,
                "InvoiceId": 1,
                "MerchantInvoiceRefId": "1234-5678-9101",
                "MerchantPaymentMethodRefId": null,
                "NetworkTransactionId": "ecb47f13-f2e3-4cc8-b2e3-6504a3bb1682",
                "InvoiceStatus": "Paid",
                "InvoiceAttemptStatus": "Success",
                "Message": "Approved",
                "Amount": {
                  "Currency": "USD",
                  "Value": 30.99
                },
                "PaymentMethodId": 1,
                "PaymentMethodTypeId": 0,
                "RawResponse": "Processor raw response (without parsing on revolv3 side)"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SaleResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Payments/authorization": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Authorize With Payment Method Details",
        "description": "<div><p></p><p>Authorize a payment method with a specified amount. A new payment method will be created and authorized.</p></div>",
        "operationId": "Payments_Authorize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "PaymentMethod": {
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main",
                    "AddressLine2": null,
                    "City": "Santa Ana",
                    "State": "CA",
                    "PostalCode": "91111",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "Joe",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": null
                },
                "NetworkProcessing": {
                  "ProcessingType": 1,
                  "OriginalNetworkTransactionId": null
                },
                "Amount": {
                  "Currency": "USD",
                  "Value": 30.99
                },
                "DynamicDescriptor": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizeWithPaymentMethodRawRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "NetworkTransactionId": "359a1ecc-d106-41be-9a75-98ea7ae98321",
                "PaymentMethodAuthorizationId": 1,
                "PaymentMethod": {
                  "PaymentMethodId": 1,
                  "BillingAddressId": 1,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "1 Default Street",
                    "AddressLine2": null,
                    "City": "Los Angeles",
                    "State": "CA",
                    "PostalCode": "90210",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "MerchantPaymentMethodRefId": null,
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": null
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizeResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Payments/authorization/{paymentMethodId}": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Authorize With Payment Method Id",
        "description": "<div><p></p><p>Authorize an existing payment method by its id with a specified amount.</p></div>",
        "operationId": "Payments_AuthorizeWithPaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "NetworkProcessing": {
                  "ProcessingType": 1,
                  "OriginalNetworkTransactionId": null
                },
                "Amount": {
                  "Currency": "USD",
                  "Value": 30.99
                },
                "DynamicDescriptor": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizeRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "NetworkTransactionId": "78c26c0c-d582-41c9-a6b2-72644074325d",
                "PaymentMethodAuthorizationId": 1,
                "PaymentMethod": {
                  "PaymentMethodId": 1,
                  "BillingAddressId": 1,
                  "BillingAddress": {
                    "AddressId": 1,
                    "AddressLine1": "1 Default Street",
                    "AddressLine2": null,
                    "City": "Los Angeles",
                    "State": "CA",
                    "PostalCode": "90210",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "MerchantPaymentMethodRefId": null,
                  "PaymentMethodAchDetails": null,
                  "PaymentMethodCreditCardDetails": null
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/AuthorizeResponseDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "422": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to process this operation."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscriptions",
        "description": "<div><p></p><p>Retrieve subscriptions for a merchant with a status code of 200 (OK).</p><p></p><p>Additionally, an optional filter Merchant Subscription Ref ID can be used to narrow results.</p><p></p><p>If no matching subscriptions exist for the merchant, a status code of 204 (No Content) will be returned.</p><p></p><p>If the Customer ID cannot be associated with an active subscription, a status code of 204 will be returned.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p></div>",
        "operationId": "Subscriptions_GetSubscriptions",
        "parameters": [
          {
            "type": "string",
            "name": "merchantSubscriptionRefId",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "SubscriptionId": 1,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "daily",
                  "SubscriptionStatusType": "current",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": {
                    "AddressId": 0,
                    "AddressLine1": "101 Update Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "PaymentMethodIds": [
                    1
                  ],
                  "CancelledAt": null,
                  "BillingPlans": [
                    {
                      "SubscriptionBillingPlanId": 1,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 1",
                      "Value": 10.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": -1,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    },
                    {
                      "SubscriptionBillingPlanId": 2,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 2",
                      "Value": 14.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": 12,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    }
                  ],
                  "Message": null,
                  "ProcessorRawResponse": null
                },
                {
                  "SubscriptionId": 2,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "monthly",
                  "SubscriptionStatusType": "recycled",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": null,
                  "PaymentMethodIds": null,
                  "CancelledAt": null,
                  "BillingPlans": null,
                  "Message": null,
                  "ProcessorRawResponse": null
                }
              ],
              "items": {
                "$ref": "#/definitions/SubscriptionDTO"
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a merchant with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create Subscription",
        "description": "<div><p></p><p>Create a subscription for a customer with a Billing Frequency Type (Daily, Weekly, Biweekly, Monthly, Bimonthly, Quarterly, Semiannually, Yearly), subscription Billing Plans items, the payment method objects list with priorities and tax amount (each object with billing address, billing first name, billing last name, payment method type (credit card, ach, google pay)) or existing payment method object with tax amount (with an authorized payment method id or payment method id) must be provided.</p><p></p><p>Optionally, a Merchant Subscription Ref ID, Tax Address, Start Date, Trial Duration, Trial Duration Type (the same values as in Billing Frequency Type), Subscription Status Type (Current, Recycle) and Subscription Cancel Type (Immediate, EndOfCycle) may be included.</p><p></p><p>Upon successful creation of the subscription, a status code of 201 (Created) will be returned.</p><p></p><p>If the provided Customer ID does not exist, a status code of 404 (Not Found) will be returned.</p><p></p><p>If a subscription cannot be created with the provided data, a status code of 400 (Bad Request) will be returned.</p></div>",
        "operationId": "Subscriptions_CreateSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "PaymentMethods": [
                  {
                    "Priority": 0,
                    "TaxAmount": 2.56,
                    "OriginalNetworkTransactionId": "102656693ac3ca6e0cdafbfe89ab99",
                    "BillingAddress": {
                      "AddressId": null,
                      "AddressLine1": "100 Main Street",
                      "AddressLine2": "",
                      "City": "Irvine",
                      "State": "CA",
                      "PostalCode": "92602",
                      "PhoneNumber": null,
                      "Email": null,
                      "Country": "US"
                    },
                    "BillingFirstName": "John",
                    "BillingLastName": "Doe",
                    "CreditCard": {
                      "PaymentAccountNumber": "4111111111111111",
                      "ExpirationDate": "1025",
                      "SecurityCode": null
                    },
                    "Ach": null,
                    "GooglePay": null,
                    "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-44d"
                  },
                  {
                    "Priority": 1,
                    "TaxAmount": 1.34,
                    "OriginalNetworkTransactionId": null,
                    "BillingAddress": {
                      "AddressId": null,
                      "AddressLine1": "100 Main Street 2",
                      "AddressLine2": "",
                      "City": "Irvine ",
                      "State": "CA",
                      "PostalCode": "9260e",
                      "PhoneNumber": null,
                      "Email": null,
                      "Country": "US"
                    },
                    "BillingFirstName": "John",
                    "BillingLastName": "Doe",
                    "CreditCard": {
                      "PaymentAccountNumber": "5555555555554444",
                      "ExpirationDate": "03/2030",
                      "SecurityCode": null
                    },
                    "Ach": null,
                    "GooglePay": null,
                    "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4344"
                  }
                ],
                "ExistingPaymentMethod": null,
                "MerchantSubscriptionRefId": "1234-5678-9101",
                "BillingFrequencyType": "daily",
                "SubscriptionStatusType": "current",
                "SubscriptionCancelType": "immediate",
                "StartDate": "2024-11-15T00:00:00",
                "TrialDuration": 0,
                "TrialDurationType": "daily",
                "TaxAddress": {
                  "AddressId": null,
                  "AddressLine1": "101 Update Street",
                  "AddressLine2": "",
                  "City": "Irvine",
                  "State": "CA",
                  "PostalCode": "92602",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "IncludeRawProcessorResponse": false,
                "Customer": {
                  "Id": 1,
                  "FirstName": null,
                  "LastName": null
                },
                "SubscriptionBillingPlans": [
                  {
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "CycleCount": -1,
                    "ValueType": "Standard",
                    "StartCycleDelay": 0
                  },
                  {
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "CycleCount": 12,
                    "ValueType": "Standard",
                    "StartCycleDelay": 1
                  }
                ],
                "RecycleImmediatePayment": false
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateSubscriptionRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 1,
                "MerchantSubscriptionRefId": "1234-5678-9101",
                "NetworkTransactionId": null,
                "BillingFrequencyType": "Monthly",
                "SubscriptionStatusType": "Current",
                "SubscriptionCancelType": "Immediate",
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "15-Dec-24",
                "TaxAddress": null,
                "PaymentMethodIds": [
                  1,
                  2
                ],
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "15-Dec-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to find a customer with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "409": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "PaymentMethodAuthorizationId is being processed in another request."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription",
        "description": "<div><p></p><p>Retrieve a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p></div>",
        "operationId": "Subscriptions_GetSubscription",
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 3,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "daily",
                "SubscriptionStatusType": "current",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": {
                  "AddressId": 0,
                  "AddressLine1": "101 Update Street",
                  "AddressLine2": "",
                  "City": "Irvine",
                  "State": "CA",
                  "PostalCode": "92602",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "PaymentMethodIds": [
                  1
                ],
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete Subscription",
        "description": "<div><p></p><p>Delete a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p></div>",
        "operationId": "Subscriptions_DeleteSubscription",
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription",
        "description": "<div><p></p><p>Update a subscription (specified with Subscription ID) with a status code of 200 (OK).</p><p>This action currently accepts any number of the following fields: Merchant Subscription Ref ID, billing frequency type ID, subscription status ID, and next bill date.</p><p>Only fields present in the request will be updated.</p><p>Upon success, this operation returns a status of 200 (OK).</p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>MerchantSubscriptionRefId</td><td>Merchant's unique identifier for the subscription</td><td></td></tr><tr><td>BillingFrequencyType</td><td>How often the subscription should be attempted for billing</td><td></td></tr><tr><td>SubscriptionStatusType</td><td>The subscription's current standing (e.g. Current, Recycle, Cancelled, PendingCancellation)</td><td></td></tr><tr><td>SubscriptionCancelType</td><td>The circumstances under which a subscription must be cancelled (e.g. Immediate or EndOfCycle)</td><td></td></tr><tr><td>NextBillDate</td><td>The subscription's next date of billing attempt</td><td></td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Subscriptions_UpdateSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantSubscriptionRefId": "1234-5678-9101",
                "BillingFrequencyType": "monthly",
                "SubscriptionCancelType": "immediate",
                "NextBillDate": "15-Nov-24"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/UpdateSubscriptionRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 1,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "monthly",
                "SubscriptionStatusType": "recycled",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": null,
                "PaymentMethodIds": null,
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "31-Oct-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "05-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/pan-lookup": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscriptions By PAN",
        "description": "<div><p></p><p>Get all subscriptions that has the given payment account number as one of its payment methods.</p><p></p><p>Upon success, this operation returns a status of 200 (OK) and a list of subscription objects.</p><p></p><p>If an invalid field or value is submitted, a status of 400 (Bad Request) will be returned.</p><p></p><p>If the payment account number is not within the payment methods of any subscription, a status code of 404 will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>PaymentAccountNumber</td><td>Payment card number</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Subscriptions_GetSubscriptionsByPANLookup",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "PaymentAccountNumber": "4111111111111111"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/GetSubscriptionsByPANRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "example": [
                {
                  "SubscriptionId": 1,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "daily",
                  "SubscriptionStatusType": "current",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": {
                    "AddressId": 0,
                    "AddressLine1": "101 Update Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "PaymentMethodIds": [
                    1
                  ],
                  "CancelledAt": null,
                  "BillingPlans": [
                    {
                      "SubscriptionBillingPlanId": 1,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 1",
                      "Value": 10.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": -1,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    },
                    {
                      "SubscriptionBillingPlanId": 2,
                      "SubscriptionId": 0,
                      "Name": "Billing Plan 2",
                      "Value": 14.99,
                      "StartDate": "15-Nov-24",
                      "CyclesRemaining": 12,
                      "CycleCount": 0,
                      "ValueType": "Standard"
                    }
                  ],
                  "Message": null,
                  "ProcessorRawResponse": null
                },
                {
                  "SubscriptionId": 2,
                  "CustomerId": 3,
                  "MerchantSubscriptionRefId": null,
                  "NetworkTransactionId": null,
                  "BillingFrequencyType": "monthly",
                  "SubscriptionStatusType": "recycled",
                  "SubscriptionCancelType": null,
                  "InitialBillDate": "15-Nov-24",
                  "NextBillDate": "16-Nov-24",
                  "TaxAddress": null,
                  "PaymentMethodIds": null,
                  "CancelledAt": null,
                  "BillingPlans": null,
                  "Message": null,
                  "ProcessorRawResponse": null
                }
              ],
              "items": {
                "$ref": "#/definitions/SubscriptionDTO"
              }
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/payment-method": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Replace Subscription Primary Payment Method",
        "description": "<div><p></p><p>Replace primary payment method for a given subscription.</p><p></p><p>The payment method information or existing payment method info with tax amount (authorized payment method ID or payment method ID) must be provided.</p><p></p><p>Upon success, the operation will return a status code of 200 (OK).</p><p>If an invalid fields or values are submitted, a status of 400 (Bad Request) will be returned.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>PaymentMethod</td><td>The subscription primary payment information with tax amount, that will be used during the subscription invoice generation</td><td>null</td></tr><tr><td>ExistingPaymentMethod</td><td>The existing payment method info (payment method id or payment method authorization id), tax amount and original network transaction id</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Subscriptions_ReplaceSubscriptionPrimaryPaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "ExistingPaymentMethod": null,
                "PaymentMethod": {
                  "TaxAmount": 2.57,
                  "OriginalNetworkTransactionId": "test-transaction-id",
                  "BillingAddress": {
                    "AddressId": null,
                    "AddressLine1": "100 Main Street",
                    "AddressLine2": "",
                    "City": "Irvine",
                    "State": "CA",
                    "PostalCode": "92602",
                    "PhoneNumber": null,
                    "Email": null,
                    "Country": "US"
                  },
                  "BillingFirstName": "John",
                  "BillingLastName": "Doe",
                  "CreditCard": {
                    "PaymentAccountNumber": "4111111111111111",
                    "ExpirationDate": "1025",
                    "SecurityCode": null
                  },
                  "Ach": null,
                  "GooglePay": null,
                  "MerchantPaymentMethodRefId": "payment-method-ref-id_hgays-213-4rf4"
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/ReplaceSubscriptionPrimaryPaymentMethodRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 1,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "monthly",
                "SubscriptionStatusType": "recycled",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": null,
                "PaymentMethodIds": [
                  1
                ],
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "31-Oct-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "05-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/address": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription Tax Address",
        "description": "<div><p></p><p>Update the tax address for a given subscription specified with Subscription ID. Upon success, the operation returns a status code of 200 (OK).</p><p></p><p>If using an Address ID in the request, the Address ID must be a currently active address among the subscription's customer's addresses.</p><p></p><p>Providing a set of address details will result in a new address being created. Supplying an empty request will result in setting the tax address to null, effectively removing the existing tax address from the subscription.</p><p></p><p>A required set of Address details: AddressLine1, City and State or AddressLine1 and PostalCode or State and PostalCode.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>AddressId</td><td>Unique identifier for a previously created billing address</td><td>null</td></tr><tr><td>AddressLine1</td><td>Address Line 1</td><td>null</td></tr><tr><td>AddressLine2</td><td>Addresss's supplemental information</td><td>null</td></tr><tr><td>City</td><td>City</td><td>null</td></tr><tr><td>State</td><td>State</td><td>null</td></tr><tr><td>PostalCode</td><td>PostalCode</td><td>null</td></tr><tr><td>Country</td><td>Country</td><td>null</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Subscriptions_UpdateSubscriptionTaxAddress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "AddressId": null,
                "AddressLine1": "101 Update Street",
                "AddressLine2": "",
                "City": "Irvine",
                "State": "CA",
                "PostalCode": "92602",
                "PhoneNumber": null,
                "Email": null,
                "Country": "US"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateAddressRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 1,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "monthly",
                "SubscriptionStatusType": "recycled",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": {
                  "AddressId": 0,
                  "AddressLine1": "101 Update Street",
                  "AddressLine2": "",
                  "City": "Irvine",
                  "State": "CA",
                  "PostalCode": "92602",
                  "PhoneNumber": null,
                  "Email": null,
                  "Country": "US"
                },
                "PaymentMethodIds": null,
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "31-Oct-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "05-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/billing-plans": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create Subscription Billing Plan",
        "description": "<div><p></p><p>Creates a subscription billing plan for the given Subscription ID.</p><p></p><p>Upon success, the operation returns a status code of 201 (Created).</p><p></p><p>If an invalid field or value is submitted, a status code of 400 (Bad Request) will be returned.</p><p></p><p>If the Subscription ID cannot be associated with an active subscription, a status code of 404 (Not Found) will be returned.</p><p></p><p>Value and ValueType work in conjunction to provide Revolv3 with information on how to act.</p><p></p><p>A subscription billing plan with a Value of 10.00 and a ValueType of 'standard' indicate the subscription should be billed for $10.00.</p><p></p><p>A subscription billing plan with a Value of 10.00 and a ValueType of 'discountPercentage' indicate the subscription should receive a 10% discount.</p><div class=\"card card--table\"><div class=\"card-header\"><div class=\"card-title\" /></div><div class=\"card-body\"><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Required Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th>Description</th></tr></thead><tbody><tr><td>BillingPlanName</td><td>The subscription's primary payment information</td></tr><tr><td>BillingPlanValue</td><td>Value for which the billing plan should be executed for</td></tr></tbody></table></div></div><div class=\"row\"><div class=\"col-12 col-md-7\"><h5>Optional Fields</h5></div></div><div class=\"row row--table\"><div class=\"col-12 table-responsive\"><table class=\"table\"><thead><tr><th class=\"name\">Name</th><th class=\"description\">Description</th><th>Default value</th></tr></thead><tbody><tr><td>BillingPlanCycleCount</td><td>The number of times the billing plan should be billed before expiration</td><td>-1</td></tr><tr><td>BillingPlanValueType</td><td>A qualifier for how the value should be interpreted (e.g. standard, discount, discountPercentage, finalDiscount, or priceOverride)</td><td>Standard</td></tr><tr><td>BillingPlanStartCycleDelay</td><td>Amount of subscription cycle to delay the start date of the billing plan</td><td>0</td></tr></tbody></table></div></div></div></div></div>",
        "operationId": "Subscriptions_CreateSubscriptionBillingPlan",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "Name": "New Billing Plan",
                "Value": 5.99,
                "CycleCount": 12,
                "ValueType": "Standard",
                "StartCycleDelay": 0
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateSubscriptionBillingPlanRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "201": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 2,
                "CustomerId": 3,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "monthly",
                "SubscriptionStatusType": "recycled",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": null,
                "PaymentMethodIds": null,
                "CancelledAt": null,
                "BillingPlans": [
                  {
                    "SubscriptionBillingPlanId": 1,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 1",
                    "Value": 10.99,
                    "StartDate": "31-Oct-24",
                    "CyclesRemaining": -1,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 2,
                    "SubscriptionId": 0,
                    "Name": "Billing Plan 2",
                    "Value": 14.99,
                    "StartDate": "05-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  },
                  {
                    "SubscriptionBillingPlanId": 3,
                    "SubscriptionId": 0,
                    "Name": "New Billing Plan",
                    "Value": 5.99,
                    "StartDate": "15-Nov-24",
                    "CyclesRemaining": 12,
                    "CycleCount": 0,
                    "ValueType": "Standard"
                  }
                ],
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/billing-plans/{subscriptionBillingPlanId}": {
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete Subscription Billing Plan",
        "description": "<div><p></p><p>Delete a subscription billing plan for a given Subscription ID and Subscription Billing Plan ID.</p><p></p><p>Upon success, the operation returns a status code of 200 (OK).</p><p></p><p>If the Subscription ID cannot be associated to an active subscription or the Subscription Billing Plan ID cannot be associated to an active billing plan under the subscription, the operation returns a status code of 404 (Not Found).</p></div>",
        "operationId": "Subscriptions_DeleteSubscriptionBillingPlan",
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "subscriptionBillingPlanId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription billing plan",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 3,
                "MerchantSubscriptionRefId": null,
                "NetworkTransactionId": null,
                "BillingFrequencyType": "daily",
                "SubscriptionStatusType": "current",
                "SubscriptionCancelType": null,
                "InitialBillDate": "15-Nov-24",
                "NextBillDate": "16-Nov-24",
                "TaxAddress": null,
                "PaymentMethodIds": null,
                "CancelledAt": null,
                "Message": null,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/SubscriptionDTO"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/payment": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create One Time Payment",
        "description": "<div><p></p><p>Create a one time payment for a given subscription ID.</p><p></p><p>Internally, this operation generates an invoice and submits the total amount for payment processing.</p><p></p><p>The given subscription must have an active payment method associate or an error status 404 (NotFound) will be returned.</p><p></p><p>If the payment processing is attempted, regardless of the success or failure of the processing, this operation will return a status code of 200 with the status of the payment processing stated in the InvoiceAttemptStatus field.</p><p></p><p>The invoice ID will be returned as well, allowing users to view the invoice generated.</p></div>",
        "operationId": "Subscriptions_CreateOneTimePayment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "example": {
                "MerchantInvoiceRefId": "ba7b98f8-04eb-4951-bd54-37cafc848b89",
                "InvoiceLineItems": [
                  {
                    "Name": "Invoice Line Item 1",
                    "Description": "",
                    "Value": 10.99,
                    "ValueType": "Standard"
                  },
                  {
                    "Name": "Invoice Line Item 2",
                    "Description": "",
                    "Value": 11.99,
                    "ValueType": "Standard"
                  },
                  {
                    "Name": "Invoice Line Item 3",
                    "Description": "",
                    "Value": 12.99,
                    "ValueType": "Standard"
                  }
                ]
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateOneTimePaymentRequestDTO"
                }
              ]
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "InvoiceId": 1,
                "MerchantInvoiceRefId": null,
                "InvoiceStatus": null,
                "InvoiceAttemptStatus": "Success",
                "Message": null,
                "Subtotal": 10.99,
                "TaxAmount": 0.98,
                "Total": 11.97,
                "PaymentMethodTypeId": 0,
                "ProcessorRawResponse": null
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CreateOneTimePaymentResponseDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    },
    "/api/Subscriptions/{subscriptionId}/cancel": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Cancel Subscription",
        "description": "<div><p></p><p>Cancel the target subscription.</p></div>",
        "operationId": "Subscriptions_CancelSubscription",
        "parameters": [
          {
            "type": "integer",
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the subscription",
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Merchant's authorization bearer token"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "SubscriptionId": 1,
                "CustomerId": 3,
                "SubscriptionStatus": "Cancelled",
                "CancelledAt": "2024-11-15T15:19:56.239075Z"
              },
              "allOf": [
                {
                  "$ref": "#/definitions/CancelSubscriptionResponseDTO"
                }
              ]
            }
          },
          "400": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "Unable to perform the request action with provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "401": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "message": "You are not authorized to perform that action."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          },
          "404": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "example": {
                "messaage": "Unable to find a subcription with the provided data."
              },
              "allOf": [
                {
                  "$ref": "#/definitions/StatusMessageResponse"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VerifyAchAccountResponse": {
      "type": "object",
      "required": [
        "isVerified"
      ],
      "properties": {
        "isVerified": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        }
      }
    },
    "StatusMessageResponse": {
      "type": "object",
      "required": [
        "message",
        "errors",
        "fluentValidatorErrors"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fluentValidatorErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationFailure"
          }
        }
      }
    },
    "ValidationFailure": {
      "type": "object",
      "required": [
        "severity"
      ],
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "attemptedValue": {},
        "customState": {},
        "severity": {
          "$ref": "#/definitions/Severity"
        },
        "errorCode": {
          "type": "string"
        },
        "formattedMessagePlaceholderValues": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "Severity": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Error",
        "Warning",
        "Info"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "AchPaymentAccountVerificationDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/CreateAddressRequestDTO"
        },
        "ach": {
          "$ref": "#/definitions/AchDTO"
        }
      }
    },
    "CreateAddressRequestDTO": {
      "type": "object",
      "properties": {
        "addressId": {
          "type": "integer",
          "format": "int64"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "AchDTO": {
      "type": "object",
      "properties": {
        "routingNumber": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "required": [
        "token_type",
        "expires_in",
        "ext_expires_in",
        "access_token"
      ],
      "properties": {
        "token_type": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int64"
        },
        "ext_expires_in": {
          "type": "integer",
          "format": "int64"
        },
        "access_token": {
          "type": "string"
        }
      }
    },
    "TokenErrorResponse": {
      "type": "object",
      "required": [
        "error",
        "error_description",
        "error_codes",
        "timestamp",
        "trace_id",
        "correlation_id",
        "error_uri"
      ],
      "properties": {
        "error": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        },
        "error_codes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "trace_id": {
          "type": "string",
          "format": "guid"
        },
        "correlation_id": {
          "type": "string",
          "format": "guid"
        },
        "error_uri": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "GetAzureAdTokenRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ValidatableBase": {
      "type": "object",
      "x-abstract": true
    },
    "CreateCheckoutLinkResponseDto": {
      "type": "object",
      "properties": {
        "checkoutId": {
          "type": "string"
        },
        "checkoutLink": {
          "type": "string"
        }
      }
    },
    "CreateCheckoutLinkRequestDto": {
      "type": "object",
      "required": [
        "oneTimePayment"
      ],
      "properties": {
        "returnUrl": {
          "type": "string"
        },
        "oneTimePayment": {
          "$ref": "#/definitions/CheckoutOneTimePaymentDto"
        }
      }
    },
    "CheckoutOneTimePaymentDto": {
      "type": "object",
      "required": [
        "checkoutLineItems"
      ],
      "properties": {
        "checkoutLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckoutLineItemRequestDto"
          }
        }
      }
    },
    "CheckoutLineItemRequestDto": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "valueType": {
          "type": "string",
          "default": "Standard"
        }
      }
    },
    "GetCompleteCheckoutInformationResponseDto": {
      "type": "object",
      "properties": {
        "checkoutId": {
          "type": "string"
        },
        "checkoutStatus": {
          "type": "string"
        },
        "returnUrl": {
          "type": "string"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time"
        },
        "customer": {
          "$ref": "#/definitions/CheckoutCustomerDto"
        },
        "invoice": {
          "$ref": "#/definitions/CheckoutInvoiceDto"
        },
        "checkoutLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckoutLineItemDto"
          }
        }
      }
    },
    "CheckoutCustomerDto": {
      "type": "object",
      "required": [
        "customerId"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "CheckoutInvoiceDto": {
      "type": "object",
      "required": [
        "invoiceId",
        "total",
        "billingDate"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        },
        "billingDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentMethod": {
          "$ref": "#/definitions/CheckoutPaymentMethodDto"
        },
        "invoiceAttempts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckoutInvoiceAttemptDto"
          }
        }
      }
    },
    "CheckoutPaymentMethodDto": {
      "type": "object",
      "required": [
        "paymentMethodId"
      ],
      "properties": {
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "billingAddress": {
          "$ref": "#/definitions/AddressDTO"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "achDetails": {
          "$ref": "#/definitions/AchDetailsDto"
        },
        "creditCardDetails": {
          "$ref": "#/definitions/CreditCardDetailsDto"
        }
      }
    },
    "AddressDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "required": [
            "addressId"
          ],
          "properties": {
            "addressId": {
              "type": "integer",
              "format": "int64"
            },
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "country": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AchDetailsDto": {
      "type": "object",
      "properties": {
        "accountNumberLast4Digits": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "CreditCardDetailsDto": {
      "type": "object",
      "properties": {
        "last4Digit": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        }
      }
    },
    "CheckoutInvoiceAttemptDto": {
      "type": "object",
      "required": [
        "invoiceAttemptId",
        "amount",
        "invoiceAttemptDate"
      ],
      "properties": {
        "invoiceAttemptId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "invoiceAttemptDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentProcessor": {
          "type": "string"
        },
        "processorTransactionId": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        }
      }
    },
    "CheckoutLineItemDto": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "CustomerDTO": {
      "type": "object",
      "required": [
        "customerId"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantCustomerRefId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "billingAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDTO"
          }
        },
        "shippingAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDTO"
          }
        },
        "taxAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressDTO"
          }
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDTO"
          }
        }
      }
    },
    "SubscriptionDTO": {
      "type": "object",
      "required": [
        "subscriptionId",
        "customerId"
      ],
      "properties": {
        "subscriptionId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantSubscriptionRefId": {
          "type": "string"
        },
        "networkTransactionId": {
          "type": "string"
        },
        "billingFrequencyType": {
          "type": "string"
        },
        "subscriptionStatusType": {
          "type": "string"
        },
        "subscriptionCancelType": {
          "type": "string"
        },
        "initialBillDate": {
          "type": "string"
        },
        "nextBillDate": {
          "type": "string"
        },
        "taxAddress": {
          "$ref": "#/definitions/AddressDTO"
        },
        "paymentMethodIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "cancelledAt": {
          "type": "string",
          "format": "date-time"
        },
        "billingPlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionBillingPlanDTO"
          }
        },
        "message": {
          "type": "string"
        },
        "processorRawResponse": {
          "type": "string"
        }
      }
    },
    "SubscriptionBillingPlanDTO": {
      "type": "object",
      "required": [
        "subscriptionBillingPlanId",
        "subscriptionId",
        "value",
        "cyclesRemaining",
        "cycleCount"
      ],
      "properties": {
        "subscriptionBillingPlanId": {
          "type": "integer",
          "format": "int64"
        },
        "subscriptionId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "startDate": {
          "type": "string"
        },
        "cyclesRemaining": {
          "type": "integer",
          "format": "int32"
        },
        "cycleCount": {
          "type": "integer",
          "format": "int32"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "SimpleObjectResult": {
      "type": "object",
      "required": [
        "response",
        "statusCode",
        "name"
      ],
      "properties": {
        "response": {},
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CreateCustomerRequestDTO": {
      "type": "object",
      "properties": {
        "merchantCustomerRefId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billingAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateAddressRequestDTO"
          }
        },
        "shippingAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateAddressRequestDTO"
          }
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSubscriptionRequestDTO"
          }
        }
      }
    },
    "CreateSubscriptionRequestDTO": {
      "type": "object",
      "required": [
        "billingFrequencyType",
        "customer",
        "subscriptionBillingPlans"
      ],
      "properties": {
        "paymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSubscriptionPaymentMethodRequestDTO"
          }
        },
        "existingPaymentMethod": {
          "$ref": "#/definitions/ExistingPaymentMethodDTO"
        },
        "merchantSubscriptionRefId": {
          "type": "string"
        },
        "billingFrequencyType": {
          "type": "string",
          "minLength": 1
        },
        "subscriptionStatusType": {
          "type": "string",
          "default": "Current"
        },
        "subscriptionCancelType": {
          "type": "string",
          "default": "EndOfCycle"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "default": "Today's date"
        },
        "trialDuration": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "trialDurationType": {
          "type": "string",
          "default": "Daily"
        },
        "taxAddress": {
          "$ref": "#/definitions/CreateAddressRequestDTO"
        },
        "includeRawProcessorResponse": {
          "type": "boolean",
          "default": false
        },
        "customer": {
          "$ref": "#/definitions/CreateSubscriptionCustomerDTO"
        },
        "subscriptionBillingPlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateSubscriptionBillingPlanRequestDTO"
          }
        },
        "recycleImmediatePayment": {
          "type": "boolean"
        }
      }
    },
    "CreateSubscriptionPaymentMethodRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
        },
        {
          "type": "object",
          "properties": {
            "priority": {
              "type": "integer",
              "format": "int32"
            },
            "taxAmount": {
              "type": "number",
              "format": "decimal"
            },
            "originalNetworkTransactionId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CreatePaymentMethodRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "required": [
            "billingFirstName",
            "billingLastName"
          ],
          "properties": {
            "billingAddress": {
              "$ref": "#/definitions/CreateAddressRequestDTO"
            },
            "billingFirstName": {
              "type": "string",
              "minLength": 1
            },
            "billingLastName": {
              "type": "string",
              "minLength": 1
            },
            "creditCard": {
              "$ref": "#/definitions/CreditCardDTO"
            },
            "ach": {
              "$ref": "#/definitions/AchDTO"
            },
            "googlePay": {
              "$ref": "#/definitions/GooglePayDTO"
            },
            "merchantPaymentMethodRefId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CreditCardDTO": {
      "type": "object",
      "properties": {
        "paymentAccountNumber": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "securityCode": {
          "type": "string"
        }
      }
    },
    "GooglePayDTO": {
      "type": "object",
      "properties": {
        "googlePayPaymentDataResponse": {
          "type": "string"
        }
      }
    },
    "ExistingPaymentMethodDTO": {
      "type": "object",
      "properties": {
        "paymentMethodAuthorizationId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "taxAmount": {
          "type": "number",
          "format": "decimal"
        },
        "originalNetworkTransactionId": {
          "type": "string"
        }
      }
    },
    "CreateSubscriptionCustomerDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "CreateSubscriptionBillingPlanRequestDTO": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "cycleCount": {
          "type": "integer",
          "format": "int32",
          "default": -1
        },
        "valueType": {
          "type": "string",
          "default": "Standard"
        },
        "startCycleDelay": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "GetCustomersQueryResultDTO": {
      "type": "object",
      "required": [
        "customerId"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantCustomerRefId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "UpdateCustomerRequestDTO": {
      "type": "object",
      "properties": {
        "merchantCustomerRefId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "CreateCustomerAddressRequestDTO": {
      "type": "object",
      "properties": {
        "addressType": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "UpdateCustomerAddressRequestDTO": {
      "type": "object",
      "properties": {
        "addressType": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "InvoiceDTO": {
      "type": "object",
      "required": [
        "invoiceId",
        "subtotal",
        "tax",
        "total"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "parentInvoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "paymentMethod": {
          "$ref": "#/definitions/InvoicePaymentMethodDTO"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "tax": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        },
        "billingDate": {
          "type": "string"
        },
        "merchantLegalName": {
          "type": "string"
        },
        "merchantCustomerRefId": {
          "type": "string"
        },
        "customerFirstName": {
          "type": "string"
        },
        "customerLastName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "integer",
          "format": "int64"
        },
        "installmentId": {
          "type": "integer",
          "format": "int64"
        },
        "eligibilityFailReason": {
          "type": "string"
        },
        "merchantSubscriptionRefId": {
          "type": "string"
        },
        "networkTransactionId": {
          "type": "string"
        },
        "invoiceLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceLineItemDTO"
          }
        },
        "invoiceAttempts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceAttemptDTO"
          }
        }
      }
    },
    "InvoicePaymentMethodDTO": {
      "type": "object",
      "required": [
        "paymentMethodId",
        "billingAddressId"
      ],
      "properties": {
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "billingAddressId": {
          "type": "integer",
          "format": "int64"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        },
        "merchantPaymentMethodRefId": {
          "type": "string"
        },
        "billingAddress": {
          "$ref": "#/definitions/AddressDTO"
        },
        "paymentMethodAchDetails": {
          "$ref": "#/definitions/AchViewDTO"
        },
        "paymentMethodCreditCardDetails": {
          "$ref": "#/definitions/CreditCardViewDTO"
        }
      }
    },
    "AchViewDTO": {
      "type": "object",
      "required": [
        "accountNumberLength"
      ],
      "properties": {
        "accountNumberLast4Digits": {
          "type": "string"
        },
        "accountNumberLength": {
          "type": "integer",
          "format": "int32"
        },
        "accountType": {
          "type": "string"
        }
      }
    },
    "CreditCardViewDTO": {
      "type": "object",
      "properties": {
        "binNumber": {
          "type": "string"
        },
        "paymentLast4Digit": {
          "type": "string"
        },
        "paymentExpirationDate": {
          "type": "string"
        }
      }
    },
    "InvoiceLineItemDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/InvoiceLineItemBase"
        },
        {
          "type": "object",
          "required": [
            "invoiceId"
          ],
          "properties": {
            "invoiceId": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "InvoiceLineItemBase": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "x-abstract": true,
          "required": [
            "invoiceLineItemId",
            "value"
          ],
          "properties": {
            "invoiceLineItemId": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "format": "decimal"
            },
            "valueType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "InvoiceAttemptDTO": {
      "type": "object",
      "required": [
        "invoiceAttemptId",
        "amount",
        "invoiceAttemptDate"
      ],
      "properties": {
        "invoiceAttemptId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "invoiceAttemptDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentProcessor": {
          "type": "string"
        },
        "processorTransactionId": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "responseMessage": {
          "type": "string"
        },
        "processorRawResponse": {
          "type": "string"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodDTO"
        },
        "eligibilityCheckOrderCode": {
          "type": "string"
        }
      }
    },
    "PaymentMethodDTO": {
      "type": "object",
      "required": [
        "paymentMethodId",
        "billingAddressId"
      ],
      "properties": {
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "billingAddressId": {
          "type": "integer",
          "format": "int64"
        },
        "billingAddress": {
          "$ref": "#/definitions/AddressDTO"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        },
        "merchantPaymentMethodRefId": {
          "type": "string"
        },
        "paymentMethodAchDetails": {
          "$ref": "#/definitions/AchViewDTO"
        },
        "paymentMethodCreditCardDetails": {
          "$ref": "#/definitions/CreditCardViewDTO"
        }
      }
    },
    "InstallmentDTO": {
      "type": "object",
      "required": [
        "installmentId",
        "customerId",
        "installmentValue"
      ],
      "properties": {
        "installmentId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInstallmentRefId": {
          "type": "string"
        },
        "billingFrequencyType": {
          "type": "string"
        },
        "installmentType": {
          "type": "string"
        },
        "installmentValue": {
          "type": "number",
          "format": "decimal"
        },
        "downPayment": {
          "type": "number",
          "format": "decimal"
        },
        "initialBillDate": {
          "type": "string"
        },
        "nextBillDate": {
          "type": "string"
        },
        "taxAddress": {
          "$ref": "#/definitions/AddressDTO"
        },
        "paymentMethodIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "installmentItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstallmentItemDTO"
          }
        },
        "billingPlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstallmentBillingPlanDTO"
          }
        }
      }
    },
    "InstallmentItemDTO": {
      "type": "object",
      "required": [
        "installmentItemId",
        "installmentId",
        "value"
      ],
      "properties": {
        "installmentItemId": {
          "type": "integer",
          "format": "int64"
        },
        "installmentId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "InstallmentBillingPlanDTO": {
      "type": "object",
      "required": [
        "installmentBillingPlanId",
        "installmentId",
        "value",
        "cyclesRemaining",
        "cycleCount"
      ],
      "properties": {
        "installmentBillingPlanId": {
          "type": "integer",
          "format": "int64"
        },
        "installmentId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "startDate": {
          "type": "string"
        },
        "cyclesRemaining": {
          "type": "integer",
          "format": "int32"
        },
        "cycleCount": {
          "type": "integer",
          "format": "int32"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "CreateInstallmentRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/PaymentMethodInfoDTO"
        },
        {
          "type": "object",
          "required": [
            "startDate",
            "trialDuration"
          ],
          "properties": {
            "merchantInstallmentRefId": {
              "type": "string"
            },
            "billingFrequencyType": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "trialDuration": {
              "type": "integer",
              "format": "int32"
            },
            "trialDurationType": {
              "type": "string"
            },
            "taxAddress": {
              "$ref": "#/definitions/CreateAddressRequestDTO"
            },
            "installmentItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreateInstallmentItemRequestDTO"
              }
            },
            "downPayment": {
              "type": "number",
              "format": "decimal"
            },
            "installmentType": {
              "type": "string"
            },
            "installmentValue": {
              "type": "number",
              "format": "decimal"
            }
          }
        }
      ]
    },
    "CreateInstallmentItemRequestDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "PaymentMethodInfoDTO": {
      "type": "object",
      "properties": {
        "paymentMethod": {
          "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
        },
        "paymentMethodAuthorizationId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InstallmentInitialPaymentResponseDTO": {
      "type": "object",
      "required": [
        "invoiceId",
        "subtotal",
        "taxAmount",
        "total"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "taxAmount": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "AdhocPaymentRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "properties": {
            "merchantInvoiceRefId": {
              "type": "string"
            },
            "adhocAmount": {
              "type": "number",
              "format": "decimal"
            }
          }
        }
      ]
    },
    "VwInvoice": {
      "type": "object",
      "required": [
        "invoiceId",
        "subtotal",
        "tax",
        "total"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "binNumber": {
          "type": "string"
        },
        "last4Digit": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "tax": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        },
        "billingDate": {
          "type": "string"
        },
        "merchantLegalName": {
          "type": "string"
        },
        "merchantCustomerRefId": {
          "type": "string"
        },
        "customerFirstName": {
          "type": "string"
        },
        "customerLastName": {
          "type": "string"
        }
      }
    },
    "CreateInvoiceRequestDTO": {
      "type": "object",
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "billingDate": {
          "type": "string"
        },
        "parentInvoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "taxAddress": {
          "$ref": "#/definitions/CreateAddressRequestDTO"
        },
        "invoiceLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateInvoiceLineItemRequestDTO"
          }
        }
      }
    },
    "CreateInvoiceLineItemRequestDTO": {
      "type": "object",
      "required": [
        "name",
        "value",
        "valueType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        },
        "valueType": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UpdateInvoiceRequestDTO": {
      "type": "object",
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceStatusType": {
          "type": "string"
        }
      }
    },
    "RefundInvoiceResponseDTO": {
      "type": "object",
      "required": [
        "refundedSubtotal",
        "refundedTax",
        "refundedTotal"
      ],
      "properties": {
        "invoice": {
          "$ref": "#/definitions/InvoiceDTO"
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceAttemptDTO"
          }
        },
        "refundedSubtotal": {
          "type": "number",
          "format": "decimal"
        },
        "refundedTax": {
          "type": "number",
          "format": "decimal"
        },
        "refundedTotal": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "RefundInvoiceRequestDTO": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "OneTimePaymentWithoutSubscriptionResponseDTO": {
      "type": "object",
      "required": [
        "customerId",
        "invoiceId",
        "subtotal",
        "taxAmount",
        "total",
        "paymentMethodId"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "taxAmount": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OneTimePaymentWithoutSubscriptionRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/PaymentMethodInfoDTO"
        },
        {
          "type": "object",
          "required": [
            "invoice"
          ],
          "properties": {
            "customerId": {
              "type": "integer",
              "format": "int64"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "merchantCustomerRefId": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "invoice": {
              "$ref": "#/definitions/CreateInvoiceForWithoutSubscriptionOneTimePaymentRequestDTO"
            },
            "dynamicDescriptor": {
              "$ref": "#/definitions/TransactionDescriptorDTO"
            }
          }
        }
      ]
    },
    "CreateInvoiceForWithoutSubscriptionOneTimePaymentRequestDTO": {
      "type": "object",
      "required": [
        "invoiceLineItems"
      ],
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateInvoiceLineItemRequestDTO"
          }
        }
      }
    },
    "TransactionDescriptorDTO": {
      "type": "object",
      "properties": {
        "subMerchantId": {
          "type": "string"
        },
        "subMerchantName": {
          "type": "string"
        },
        "subMerchantPhone": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      }
    },
    "OneOffPaymentResponseDTO": {
      "type": "object",
      "required": [
        "invoiceId",
        "subtotal",
        "taxAmount",
        "total"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "taxAmount": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "OneOffPaymentRequestDTO": {
      "type": "object",
      "properties": {
        "paymentMethod": {
          "$ref": "#/definitions/CreateOneOffPaymentMethodRequestDTO"
        },
        "invoice": {
          "$ref": "#/definitions/CreateInvoiceForOneOffPaymentRequestDTO"
        }
      }
    },
    "CreateOneOffPaymentMethodRequestDTO": {
      "type": "object",
      "properties": {
        "billingAddress": {
          "$ref": "#/definitions/CreateAddressRequestDTO"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCardDTO"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "merchantRefId": {
          "type": "string"
        }
      }
    },
    "CreateInvoiceForOneOffPaymentRequestDTO": {
      "type": "object",
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateInvoiceLineItemRequestDTO"
          }
        }
      }
    },
    "UpdateBillingAddressRequestDTO": {
      "type": "object",
      "properties": {
        "billingAddress": {
          "$ref": "#/definitions/CreateAddressRequestDTO"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        }
      }
    },
    "AuthorizePaymentMethodCommandResponseDTO": {
      "type": "object",
      "required": [
        "paymentMethodAuthorizationId"
      ],
      "properties": {
        "paymentMethodAuthorizationId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodDTO"
        }
      }
    },
    "AuthorizePaymentMethodCommandRequestDTO": {
      "type": "object",
      "properties": {
        "paymentMethod": {
          "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "processorType": {
          "$ref": "#/definitions/ProcessorType"
        }
      }
    },
    "ProcessorType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "WorldPay",
        "Adyen",
        "PGPayTech",
        "Tsys",
        "Epx",
        "Nuvei"
      ],
      "enum": [
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "ReverseAuthorizationCommandResponseDTO": {
      "type": "object",
      "required": [
        "paymentProcessor"
      ],
      "properties": {
        "paymentProcessor": {
          "$ref": "#/definitions/ProcessorType"
        },
        "referenceNumber": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ReverseAuthorizationCommandRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "required": [
            "paymentMethodAuthorizationId"
          ],
          "properties": {
            "paymentMethodAuthorizationId": {
              "type": "integer",
              "format": "int64"
            },
            "reason": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "format": "decimal"
            }
          }
        }
      ]
    },
    "SaleResponseDTO": {
      "type": "object",
      "required": [
        "invoiceId",
        "paymentMethodId",
        "paymentMethodTypeId"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "merchantPaymentMethodRefId": {
          "type": "string"
        },
        "networkTransactionId": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/AmountDTO"
        },
        "paymentMethodId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethodTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "rawResponse": {
          "type": "string"
        }
      }
    },
    "AmountDTO": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "currency": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "SaleWithPaymentMethodRawRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/SaleRequestDTO"
        },
        {
          "type": "object",
          "required": [
            "paymentMethod"
          ],
          "properties": {
            "networkProcessing": {
              "$ref": "#/definitions/NetworkProcessingDTO"
            },
            "paymentMethod": {
              "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
            }
          }
        }
      ]
    },
    "NetworkProcessingDTO": {
      "type": "object",
      "properties": {
        "processingType": {
          "$ref": "#/definitions/PaymentProcessingTypeEnum"
        },
        "originalNetworkTransactionId": {
          "type": "string"
        }
      }
    },
    "PaymentProcessingTypeEnum": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "InitialRecurring",
        "Recurring",
        "InitialInstallment",
        "Installment",
        "Undefined"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5
      ]
    },
    "SaleRequestDTO": {
      "type": "object",
      "required": [
        "invoice"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "includeRawProcessorResponse": {
          "type": "boolean",
          "default": false
        },
        "invoice": {
          "$ref": "#/definitions/InvoiceDetailsDTO"
        },
        "dynamicDescriptor": {
          "$ref": "#/definitions/TransactionDescriptorDTO"
        }
      }
    },
    "InvoiceDetailsDTO": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/AmountDTO"
        }
      }
    },
    "SaleWithPaymentMethodRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/SaleRequestDTO"
        },
        {
          "type": "object",
          "properties": {
            "networkProcessing": {
              "$ref": "#/definitions/NetworkProcessingDTO"
            }
          }
        }
      ]
    },
    "AuthorizeResponseDTO": {
      "type": "object",
      "required": [
        "paymentMethodAuthorizationId"
      ],
      "properties": {
        "networkTransactionId": {
          "type": "string"
        },
        "paymentMethodAuthorizationId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodDTO"
        }
      }
    },
    "AuthorizeWithPaymentMethodRawRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizeRequestDTO"
        },
        {
          "type": "object",
          "required": [
            "paymentMethod"
          ],
          "properties": {
            "paymentMethod": {
              "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
            }
          }
        }
      ]
    },
    "AuthorizeRequestDTO": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "networkProcessing": {
          "$ref": "#/definitions/NetworkProcessingDTO"
        },
        "amount": {
          "$ref": "#/definitions/AmountDTO"
        },
        "dynamicDescriptor": {
          "$ref": "#/definitions/TransactionDescriptorDTO"
        }
      }
    },
    "UpdateSubscriptionRequestDTO": {
      "type": "object",
      "properties": {
        "merchantSubscriptionRefId": {
          "type": "string"
        },
        "billingFrequencyType": {
          "type": "string"
        },
        "subscriptionStatusType": {
          "type": "string"
        },
        "subscriptionCancelType": {
          "type": "string"
        },
        "nextBillDate": {
          "type": "string"
        }
      }
    },
    "GetSubscriptionsByPANRequestDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ValidatableBase"
        },
        {
          "type": "object",
          "properties": {
            "paymentAccountNumber": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ReplaceSubscriptionPrimaryPaymentMethodRequestDTO": {
      "type": "object",
      "properties": {
        "existingPaymentMethod": {
          "$ref": "#/definitions/ExistingPaymentMethodDTO"
        },
        "paymentMethod": {
          "$ref": "#/definitions/ReplaceSubscriptionPrimaryPaymentMethodDTO"
        }
      }
    },
    "ReplaceSubscriptionPrimaryPaymentMethodDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/CreatePaymentMethodRequestDTO"
        },
        {
          "type": "object",
          "properties": {
            "taxAmount": {
              "type": "number",
              "format": "decimal"
            },
            "originalNetworkTransactionId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CreateOneTimePaymentResponseDTO": {
      "type": "object",
      "required": [
        "invoiceId",
        "subtotal",
        "taxAmount",
        "total",
        "paymentMethodTypeId"
      ],
      "properties": {
        "invoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "invoiceAttemptStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "subtotal": {
          "type": "number",
          "format": "decimal"
        },
        "taxAmount": {
          "type": "number",
          "format": "decimal"
        },
        "total": {
          "type": "number",
          "format": "decimal"
        },
        "paymentMethodTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "processorRawResponse": {
          "type": "string"
        }
      }
    },
    "CreateOneTimePaymentRequestDTO": {
      "type": "object",
      "properties": {
        "merchantInvoiceRefId": {
          "type": "string"
        },
        "invoiceLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateInvoiceLineItemRequestDTO"
          }
        }
      }
    },
    "CancelSubscriptionResponseDTO": {
      "type": "object",
      "required": [
        "subscriptionId",
        "customerId",
        "cancelledAt"
      ],
      "properties": {
        "subscriptionId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "subscriptionStatus": {
          "type": "string"
        },
        "cancelledAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}